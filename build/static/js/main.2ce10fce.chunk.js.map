{"version":3,"sources":["class/Cookie/Cookie.ts","class/Utility/Utility.ts","class/Auth/Auth.ts","components/Logout/LogoutButton.tsx","components/NavBar/NavBar.tsx","class/Service/Compare.ts","components/CompanyCard/CompanyCard.tsx","components/Compare/ApiCallNBB.tsx","components/Compare/CompareForm.tsx","screens/HomeScreen/HomeScreen.tsx","screens/ContactScreen/ContactScreen.tsx","components/UserHistory/userHistoryCard.tsx","components/UserHistory/UserHistory.tsx","screens/HistoryScreen/HistoryScreen.tsx","components/Login/LoginForm.tsx","screens/LoginScreen/LoginScreen.tsx","context.ts","components/Alert/Alert.tsx","components/register/RegisterForm.tsx","screens/Register/Register.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Cookie","name","nameLenPlus","length","val","document","cookie","split","map","c","trim","filter","substring","decodeURIComponent","this","value","days","expires","date","Date","setTime","getTime","toUTCString","GetCookies","utility","AuthSession","auth","status","DeleteCookie","base","Logout","useState","setErr","setsuccess","setErrString","type","className","onClick","event","preventDefault","console","log","fetch","method","mode","credentials","headers","then","e","json","hasError","errors","hold","Object","entries","key","push","error","undefined","window","location","reload","catch","err","NavBar","check","Auth","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","Collapse","id","Nav","Link","as","NavLink","to","Item","SetCookie","Compare","getCompaniesArray","fieldOfcompanyObject","arrayCompany","input1","input2","index","field","companyInfo1","companyInfo2","field1","field2","compareInputsAndReturnColor","CompanyCard","companyInfo","i","Card","style","width","minHeight","Body","Title","Text","vat","address","depositDate","Company","ByIndex","equitity","debt","companyProfit","ApiCallNBB","companyVAT","setCompanyInfo","errorState1","setErrorState1","errorState2","setErrorState2","setLoading","useEffect","Promise","all","GetCompanyDetails","a","dataBucket","errorcount","url","response","data","insertHistroy","finalCompanyData","errorState","count","company","epost","toString","body","JSON","stringify","ok","Error","result","message","role","CompareForm","vatArray","submit","setVatArray","handleVat","target","test","userSessionHistoryCompanies","Form","Group","controlId","onChange","Label","Control","placeholder","Button","pattern","required","HomeScreen","ContactScreen","loading","userHistoryCard","UserHistory","history","setHistoryCompanies","HistoryScreen","setSearch","Login","setAuth","loggedin","Email","Password","user","setUser","handleChange","userHold","action","htmlFor","token","replace","LoginScreen","SiteContext","createContext","companies","Alert","msg","RegisterForm","LastName","FristName","ConfirmPassword","success","errString","Register","App","SetInputVat","search","HistoryCall","destroy","sendOBJ","Provider","styles","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ce10fce.chunk.js","sourcesContent":["class Cookie{\r\n                    /**\r\n                 * \r\n                 * @param name string\r\n                 * @returns string|null \r\n                 */\r\n\r\n            // Given a cookie key `name`, returns the value of\r\n            // the cookie or `null`, if the key is not found.\r\n            private  Cookie(name: string):string|null {\r\n                const nameLenPlus = (name.length + 1);\r\n\r\n\r\n                const val:string|null = document.cookie\r\n                    .split(';')\r\n                    .map(c => c.trim())\r\n                    .filter(cookie => {\r\n                        return cookie.substring(0, nameLenPlus) === `${name}=`;\r\n                    })\r\n                    .map(cookie => {\r\n                        return decodeURIComponent(cookie.substring(nameLenPlus));\r\n                    })[0] || null;\r\n            \r\n                    return val;\r\n            }\r\n\r\n\r\n            public  AuthSession(name:string):boolean{\r\n\r\n                if(this.Cookie(name) === null) return false;\r\n\r\n                if(this.Cookie(name) == \"true\") return true;\r\n                if(this.Cookie(name) == \"flase\") return true;\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n\r\n            \r\n\r\n            /**\r\n             * \r\n             * @param name  string name of the cookie\r\n             * @returns string value of the cookie\r\n             */\r\n\r\n            public  GetCookies(name:string):string|boolean{\r\n                const cookie:string|null = this.Cookie(name);\r\n                if(cookie === null) return false;\r\n\r\n                return cookie;\r\n\r\n            }\r\n\r\n            /**\r\n             * \r\n             * @param name string key cookie\r\n             * @param value string value of the cookie\r\n             * @param days number days  expires in 30 days\r\n             * @returns bool if the cookie was created then return true els false\r\n             */\r\n\r\n            public  SetCookie(name:string,value:any,days:number):boolean {\r\n                \r\n                let expires:string = \"\";\r\n\r\n                if (days) {\r\n                    var date = new Date();\r\n                    date.setTime(date.getTime() + (days*24*60*60*1000));\r\n                    expires = \"; expires=\" + date.toUTCString();\r\n                }\r\n                document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\r\n\r\n\r\n                if(this.GetCookies(name) !== null) return true;\r\n                else return false;\r\n\r\n            }\r\n\r\n            /**\r\n             * \r\n             * @param name string name cookie to delete\r\n             * @returns bool will return true\r\n             */\r\n            public DeleteCookie(name:string):boolean {\r\n                document.cookie = name +'=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n                \r\n                return true;\r\n\r\n            }\r\n}\r\n\r\n\r\nconst cookie = new Cookie();\r\n\r\nexport default cookie;","import cookie from \"../Cookie/Cookie\";\r\n\r\nclass Utility{\r\n\r\n\t/**\r\n\t * @param name string key of cookie name\r\n\t * @returns bool true or false\r\n\t */\r\n\r\npublic  AuthSession(name:string):boolean{\r\n\r\n    return cookie.AuthSession(name);\r\n\r\n}\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst utility = new Utility();\r\n\r\nexport  default utility;","\r\nimport { type } from \"os\";\r\nimport cookie from \"../Cookie/Cookie\";\r\nimport utility from \"../Utility/Utility\";\r\n\r\nclass Auth{\r\n\r\n    /**\r\n     * \r\n     * @returns bool \r\n     * this function will return true if the user is authenticated else false\r\n     */\r\n\r\n    public Auth():boolean{\r\n        \r\n        \r\n        return utility.AuthSession(\"auth\");\r\n    }\r\n\r\n    /**\r\n     * this function will kill auth cookie\r\n     */\r\n\r\n    public destroy(status:number):void{\r\n       \r\n        if(typeof status !== \"undefined\"){\r\n            if(status >= 400 && status != 404){\r\n                cookie.DeleteCookie(\"auth\");\r\n            }\r\n        }\r\n\r\n      \r\n    }\r\n\r\n\r\n  \r\n\r\n    \r\n}\r\n\r\nconst auth = new Auth();\r\nexport  default auth;","import { ChangeEventHandler, MouseEventHandler, useReducer, useState } from \"react\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport ILoginUser from \"../../interface/ILoginForm/ILoginUser\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nconst base =    cookie.GetCookies(\"base\");\r\nconst Logout=()=>{\r\n\r\n    const [err,setErr] = useState<boolean>(false);\r\n    const [success,setsuccess] = useState<boolean>(false);\r\n    const [errString,setErrString] = useState<string[]>([]);\r\n\r\n\r\n\r\n      const send :MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n        event.preventDefault()\r\n        console.log()\r\n            fetch(base+\"/api/Auth/loginout\",{\r\n             \r\n                    method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                    mode: 'cors', // no-cors, *cors, same-origin\r\n                   // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached,\r\n                   credentials:\"same-origin\",\r\n                   headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                    \"Access-Control-Allow-Methods\": \"OPTIONS, GET, POST\"\r\n\r\n                  },\r\n                    \r\n            }).then(e=>e.json())\r\n            .then(e => {\r\n                \r\n                console.log(e)\r\n                if(e.hasError || typeof e.errors == \"object\"){\r\n\r\n                    let hold = [];\r\n                    if(typeof e.errors == \"object\"){\r\n                    for (const [key, value] of Object.entries(e.errors)) {\r\n                       hold.push(\"-\"+key+\": \"+value);\r\n                    }                   \r\n                 }else{\r\n                    hold.push(e.error );\r\n                 }\r\n                    \r\n                    setErr(true)\r\n\r\n                    setErrString(hold);\r\n                    \r\n\r\n\r\n                }else{\r\n                    setErr(false)\r\n                }\r\n\r\n                if(!e.hasError && e.errors === undefined){\r\n                    //auth.destroy();\r\n                    cookie.DeleteCookie(\"auth\")\r\n                    cookie.DeleteCookie(\"token\")\r\n                    setsuccess(true)\r\n                    window.location.reload();\r\n                }else{\r\n                    setsuccess(false)\r\n                }\r\n            })\r\n            .catch(err=> console.log(err))\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={send}>Log out</button>\r\n\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Logout;","import { useContext } from \"react\";\r\nimport { Button, Container, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport { SiteContext } from \"../../context\";\r\nimport Logout from \"../Logout/LogoutButton\";\r\n\r\n\r\n\r\n\r\n\r\ninterface NavBarProps {\r\n}\r\n\r\nconst NavBar = ({ }: NavBarProps) => {\r\n    const check:boolean = auth.Auth();\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand href=\"#home\">IT Project Comparison</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        {check?\r\n                        <>\r\n                        <Nav.Link as={NavLink} to=\"/home\">Home</Nav.Link>\r\n                        <Nav.Link as={NavLink} to=\"/UserHistory\">User History</Nav.Link>\r\n                        <Nav.Link as={NavLink} to=\"/contact\">Contact Us</Nav.Link>\r\n                        <Nav.Item className=\"ml-auto\">\r\n                        <Logout></Logout>\r\n                        </Nav.Item>\r\n                        </>\r\n                    \r\n                        : \r\n                        <>\r\n                         <Nav.Link as={NavLink} to=\"/home\">Home</Nav.Link>\r\n                          <Nav.Link as={NavLink} to=\"/register\">Registeren</Nav.Link>\r\n                          <Nav.Link as={NavLink} to=\"/login\">Login</Nav.Link>\r\n                        </>\r\n                        \r\n                        }\r\n                \r\n                <div className=\"ml-5\">\r\n                    <input type=\"button\" onClick={()=>{\r\n                            cookie.SetCookie(\"base\",\"https://localhost:44391\",2)\r\n                            cookie.SetCookie(\"checkBase\",\"flase\",2);\r\n                            cookie.DeleteCookie(\"auth\")\r\n                            cookie.DeleteCookie(\"token\")\r\n                            window.location.reload();\r\n\r\n                        }}  value=\"Local\" className={cookie.GetCookies(\"checkBase\")==\"flase\"?\"btn btn-success\":\"btn btn-info\" } />\r\n\r\n                        <input type=\"button\" onClick={()=>{\r\n                        \r\n                                cookie.SetCookie(\"base\",\"https://project202220220524193351.azurewebsites.net\",2)\r\n                                cookie.SetCookie(\"checkBase\",\"true\",2);\r\n                                cookie.DeleteCookie(\"auth\")\r\n                                cookie.DeleteCookie(\"token\")\r\n                                window.location.reload();\r\n                        }}  value=\"DB\" className={cookie.GetCookies(\"checkBase\")==\"flase\"?\"btn btn-info\":\"btn btn-success\" } />\r\n\r\n\r\n                </div>\r\n\r\n                  \r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","\r\nimport { ICompanyData } from \"../../types\";\r\n\r\n\r\n\r\n\r\nclass Compare{\r\n\r\n\r\nprivate arrayCompany:ICompanyData[] | undefined;\r\n\r\nprivate fieldOfcompanyObject:string | undefined;\r\n\r\n\r\nprivate input1:number|undefined ;\r\nprivate input2:number|undefined ;\r\n\r\n\r\n\r\nconstructor(getCompaniesArray:ICompanyData[],fieldOfcompanyObject:string){\r\n  this.arrayCompany = getCompaniesArray;\r\n  this.fieldOfcompanyObject = fieldOfcompanyObject;\r\n\r\n}\r\n\r\n\r\n\r\npublic static Company(getCompaniesArray:ICompanyData[],fieldOfcompanyObject:string){\r\n\r\n\r\n  return new Compare(getCompaniesArray,fieldOfcompanyObject);\r\n\r\n}\r\n\r\n  private compareInputsAndReturnColor (input1:number,input2:number):string{\r\n    if( input1 > input2){\r\n        return \"text-success\";\r\n    }\r\n    \r\n    if(input1 == input2){\r\n      return \"\";\r\n\r\n    }else{\r\n      return \"text-danger\";\r\n    }\r\n\r\n    return \"\";\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\npublic ByIndex (index:number):this|null{\r\n  if(this.arrayCompany != undefined && this.arrayCompany != undefined){\r\n            type ObjectKey1 = keyof typeof companyInfo1; \r\n            type ObjectKey2 = keyof typeof companyInfo2;\r\n           const  field = this.fieldOfcompanyObject\r\n      \r\n            let companyInfo1:ICompanyData =  this.arrayCompany[index == 0 ?0:1];\r\n            let companyInfo2:ICompanyData =  this.arrayCompany[index == 0 ?1:0];\r\n            let field1 = field as ObjectKey1;\r\n            let field2 = field as ObjectKey2;\r\n            let wait:string ; \r\n\r\n              if(typeof companyInfo1[field1]  != undefined && typeof companyInfo2[field2]  != undefined ){\r\n                let input1 = companyInfo1[field1] ?? 0 ;\r\n                let input2 = companyInfo2[field2] ?? 0 ;\r\n                this.input1 = +input1;\r\n                this.input2 = +input2;\r\n             \r\n                \r\n\r\n              }\r\n       return this\r\n\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n\r\n\r\n    public Compare():string{\r\n      if(this.input1 != undefined  && this.input2 != undefined  ){\r\n        let input1 = this.input1  ;\r\n        let input2 = this.input2 ;\r\n\r\n        switch(this.fieldOfcompanyObject){\r\n          case \"companyProfit\":\r\n            return this.compareInputsAndReturnColor(+input1, +input2)  ;\r\n          break\r\n          case \"debt\":\r\n            return this.compareInputsAndReturnColor(+input1, +input2)  ;\r\n          break\r\n          case \"equitity\":\r\n            return this.compareInputsAndReturnColor(+input1, +input2)  ;\r\n          break\r\n          case \"depositDate\":\r\n            return this.compareInputsAndReturnColor(+input1, +input2)  ;\r\n          break\r\n          default :\r\n  \r\n            return \"black\"\r\n          break\r\n  \r\n        }\r\n\r\n      }\r\n\r\n      return \"black\"\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Compare;","import { useContext, useEffect, useState } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Compare from \"../../class/Service/Compare\";\r\nimport { SiteContext } from \"../../context\";\r\nimport { ICompanyData } from \"../../types\";\r\nimport PostCallDB from \"../Compare/PostCallDB\";\r\n\r\ninterface CompanyCardProps {\r\n  companyInfo: ICompanyData[]\r\n// text-danger , text-success \r\n}\r\n\r\n\r\n\r\nconst CompanyCard = ({ companyInfo }: CompanyCardProps) => {\r\n\r\n  return (\r\n      \r\n      <>\r\n      { companyInfo?.map((c: ICompanyData,i:number) => {\r\n\r\n\r\n            return (\r\n              <div className=\"col-md-3  mt-5 ml-5\">\r\n              <Card style={{ width: '100%',minHeight:\"400px\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>{c.name}</Card.Title>\r\n                  <Card.Text>VAT : {c.vat} </Card.Text>\r\n                  <Card.Text>Adress: {c.address}</Card.Text>\r\n                  <Card.Text  >Publishing Date: {c.depositDate}</Card.Text>\r\n                 \r\n                  <Card.Text className={ Compare.Company(companyInfo,\"equitity\").ByIndex(i)?.Compare()} >Equity: {c.equitity} </Card.Text>\r\n                  <Card.Text className={ Compare.Company(companyInfo,\"debt\").ByIndex(i)?.Compare() } >Debts: {c.debt} </Card.Text>\r\n                  <Card.Text className={Compare.Company(companyInfo,\"companyProfit\").ByIndex(i)?.Compare() } >Profit: {c.companyProfit}</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n              </div>\r\n            )\r\n          }\r\n          )\r\n\r\n      }\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default CompanyCard;","import { useEffect, useState } from \"react\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport { ICompanyData, IPostCompanyData } from \"../../types\";\r\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\r\nimport PostCallDB from \"./PostCallDB\";\r\n\r\n\r\nconst base =    cookie.GetCookies(\"base\");\r\n\r\n\r\n\r\ninterface APICallNBBProps {\r\n    companyVAT: string[],\r\n    companyInfo: ICompanyData[],\r\n    setCompanyInfo: React.Dispatch<React.SetStateAction<ICompanyData[]>>\r\n}\r\n\r\n\r\nconst ApiCallNBB = ({ companyInfo, companyVAT, setCompanyInfo }: APICallNBBProps) => {\r\n    const [errorState1, setErrorState1] = useState<boolean>(false);\r\n    const [errorState2, setErrorState2] = useState<boolean>(false);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n\r\n    //arranges the post, will be moved to a component of its own.\r\n\r\n    useEffect(() => {\r\n        //for testing purposes please regard changing your localhost port.\r\n        Promise.all([GetCompanyDetails()]);\r\n\r\n\r\n    }, []);\r\n    //response can only be called per method, this is the reason two API call methodes were made.\r\n    //both calls are in a try catch so the app won't crash, user will be notified if the VAT they've used was valid.\r\n\r\n    const GetCompanyDetails = async () => {\r\n\r\n        setLoading(true);\r\n        let dataBucket: ICompanyData[] = [];\r\n        let errorcount = 0;\r\n        for (let i = 0; i < companyVAT.length; i++) {\r\n            try {\r\n                errorcount = errorcount + 1;\r\n                let url = `${base}/nbbapi/${companyVAT[i]}`;\r\n                let response = await fetch(`${url}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'content-type': 'application/json',\r\n                        'Access-Control-Allow-Origin': '*'\r\n                    }\r\n                });\r\n                let data = await response.json();\r\n                insertHistroy(data.finalCompanyData[0])\r\n                dataBucket = [...dataBucket, ...data.finalCompanyData as ICompanyData[]];\r\n            }\r\n\r\n            catch (error) {\r\n                errorState(errorcount);\r\n\r\n            }\r\n        }\r\n        setCompanyInfo(dataBucket);\r\n        setLoading(false);\r\n    }\r\n\r\n    //errorState method determines which exception needs to be triggered.\r\n    const errorState = (count: number) => {\r\n        console.log(count);\r\n\r\n        if (count === 1) {\r\n            setErrorState1(true);\r\n        }\r\n        else if (count === 2) {\r\n            setErrorState2(true);\r\n        }\r\n        else {\r\n            setErrorState1(true);\r\n            setErrorState2(true);\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    /*const GetCompanyDetailsFirst = async () => {\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[0]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n      \r\n      \r\n\r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n           \r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState1(true);\r\n        }\r\n\r\n    }\r\n    const GetCompanyDetailsSecond = async () => {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[1]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n            const hold = data;\r\n            \r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n            PostToHistory(data.finalCompanyData .pop())\r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState2(true);\r\n        }\r\n\r\n    }*/\r\n\r\n    //renders that the user will see when they've provide the data, condition statements make sure the user will be notified when wrong inputs have been made.\r\n\r\n\r\n    const insertHistroy = async (company: ICompanyData)=>{\r\n        setLoading(true);\r\n\r\n        let epost: IPostCompanyData = {\r\n            address: company.address,\r\n            companyProfit: company.companyProfit.toString(),\r\n            debt: company.debt.toString(),\r\n            depositDate: company.depositDate?.toString(),\r\n            equitity: company.equitity.toString(),\r\n            name: company.name,\r\n            vat: company.vat\r\n        }\r\n        console.log(epost)\r\n        if (auth.Auth()) {\r\n\r\n            try {\r\n                const response = await fetch(base+'/api/history/history', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(epost),\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                        \"Access-Control-Allow-Credentials\": \"true\",\r\n                        \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                        \"Access-Control-Allow-Methods\": \"POST\",\r\n                        'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Error! status: ${response.status}`);\r\n                }\r\n                const result = (await response.json());\r\n\r\n                console.log('result is: ', JSON.stringify(result));\r\n\r\n                return result;\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    console.log('error message: ', error.message);\r\n                    return error.message;\r\n                } else {\r\n                    console.log('unexpected error: ', error);\r\n                    return 'An unexpected error occurred';\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n\r\n    if (errorState1 === false && errorState2 === false) {\r\n        return (\r\n            <div className=\"d-flex justify-content-around\">\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n    else if (errorState1 === true && errorState2 === false) {\r\n        return (\r\n            <div >\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Failed to find the first result, please try again with a valid VAT number!\r\n                </div>\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if (errorState1 === false && errorState2 === true) {\r\n        return (\r\n            <div>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Failed to find the second result, please try again with a valid VAT number!\r\n                </div>\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Failed to find any results, please try again using valid VAT numbers!\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ApiCallNBB;","import Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport React, { useContext, useEffect, useState, ChangeEventHandler, MouseEventHandler } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ICompanyData } from \"../../types\";\r\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\r\nimport ApiCallNBB from './ApiCallNBB';\r\n\r\ninterface CompareProps {\r\n  companyVAT: string[],\r\n  companyInfo: ICompanyData[],\r\n  vatArray: string[],\r\n  setCompanyInfo: React.Dispatch<React.SetStateAction<ICompanyData[]>>,\r\n  submit: React.MouseEventHandler<HTMLButtonElement>,\r\n  setVatArray: React.Dispatch<React.SetStateAction<string[]>>\r\n  userSessionHistoryCompanies: ICompanyData[]\r\n}\r\n\r\nconst CompareForm = ({ companyInfo, companyVAT, vatArray, submit, setCompanyInfo, setVatArray,userSessionHistoryCompanies }: CompareProps) => {\r\n\r\n  const handleVat: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    //checksum that makes sure only relevant data can be used to make the API call to the NBB.\r\n    const re = /^[0-9\\b]+$/;\r\n\r\n    var count: string[] = (event.target.value).split(\"\");\r\n    if (count.length === 10 && re.test(event.target.value)) {\r\n      setVatArray([...vatArray, event.target.value]);\r\n    }\r\n    \r\n  }\r\n  const clearHandler: MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n    window.location.reload();\r\n\r\n  }\r\n  let history = userSessionHistoryCompanies\r\n  //if data has entered the APICALLNBB will be called upon to make the fetch calls.\r\n  if (companyVAT.length !== 0) {\r\n\r\n    return (\r\n      <main>\r\n        <h1>NBB Company Comparison</h1>\r\n        <p>\r\n          Welcome to the Company Comparison Project.<br></br>\r\n          Enter two company VAT numbers to compare both key figures.\r\n        </p>\r\n\r\n\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formCompany1\" onChange={handleVat} >\r\n            <Form.Label>Company1VAT</Form.Label>\r\n            <Form.Control type=\"VAT\" placeholder=\"Enter VATNumber\"  />\r\n            <Form.Text className=\"text-muted\" >\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formCompany2\" onChange={handleVat}>\r\n            <Form.Label>Company2VAT</Form.Label>\r\n            <Form.Control type=\"VAT\" placeholder=\"Enter VATNumber\" />\r\n            <Form.Text className=\"text-muted\" >\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\" onClick={clearHandler}>\r\n            Clear\r\n          </Button>\r\n        </Form>\r\n\r\n        <ApiCallNBB companyVAT={companyVAT} companyInfo={companyInfo} setCompanyInfo={setCompanyInfo} />\r\n  \r\n      </main>\r\n    )\r\n  }\r\n\r\n  else {\r\n\r\n    return (\r\n      <main>\r\n        <h1>NBB Company Comparison</h1>\r\n        <p>\r\n          Welcome to the Company Comparison Project.<br></br>\r\n          Enter two company VAT numbers to compare both key figures.\r\n        </p>\r\n\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formCompany1\" onChange={handleVat} >\r\n            <Form.Label>Company1VAT</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter VATNumber\" />\r\n            <Form.Text className=\"text-muted\" >\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formCompany2\" onChange={handleVat}>\r\n            <Form.Label>Company2VAT</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter VATNumber\" pattern=\"[0-9]\" required />\r\n            <Form.Text className=\"text-muted\" >\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\" onClick={submit}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n      </main>\r\n\r\n\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default CompareForm;","import Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport React, { useContext, useEffect, useState, ChangeEventHandler, MouseEventHandler } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ICompanyData } from \"../../types\";\r\nimport CompanyCard from \"../../components/CompanyCard/CompanyCard\";\r\nimport CompareForm from '../../components/Compare/CompareForm';\r\n\r\n\r\ninterface HomeScreenProps {\r\n  companyVAT: string[],\r\n  companyInfo: ICompanyData[],\r\n  vatArray: string[],\r\n  setCompanyInfo: React.Dispatch<React.SetStateAction<ICompanyData[]>>,\r\n  submit: React.MouseEventHandler<HTMLButtonElement>,\r\n  setVatArray: React.Dispatch<React.SetStateAction<string[]>>\r\n  userSessionHistoryCompanies: ICompanyData[]\r\n}\r\n\r\nconst HomeScreen = ({companyInfo, companyVAT,vatArray,setVatArray, submit, setCompanyInfo,userSessionHistoryCompanies }: HomeScreenProps) => {\r\n\r\n  return (\r\n    <main>\r\n      <CompareForm companyVAT={companyVAT} submit={submit} vatArray = {vatArray} setVatArray={setVatArray} companyInfo={companyInfo}  setCompanyInfo = {setCompanyInfo} userSessionHistoryCompanies = {userSessionHistoryCompanies}/>\r\n    </main>\r\n  );\r\n}\r\nexport default HomeScreen;","import { useEffect, useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport { ICompanyData, HistoryResponse } from \"../../types\";\r\n\r\n\r\ninterface ContactScreenProps {userSessionHistoryCompanies : ICompanyData[]\r\n\r\n}\r\n\r\nconst ContactScreen = ({userSessionHistoryCompanies} : ContactScreenProps) => {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n\r\n\r\n       if (loading === false) {return (\r\n        <div>\r\n            <div className=\"col d-flex justify-content-center\">\r\n              { userSessionHistoryCompanies?.map((c: ICompanyData) => {\r\n                    return (\r\n                      <Card style={{ width: '60%' }}>\r\n                        <Card.Body>\r\n                          <Card.Title>{c.name}</Card.Title>\r\n                          <Card.Text>VAT : {c.vat} </Card.Text>\r\n                          <Card.Text>Adress: {c.address}</Card.Text>\r\n                          <Card.Text>Publishing Date: {c.depositDate}</Card.Text>\r\n                          <Card.Text>Equity: {c.equitity}</Card.Text>\r\n                          <Card.Text>Debts: {c.debt}</Card.Text>\r\n                          <Card.Text>Profit: {c.companyProfit}</Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    )\r\n                  }\r\n                  )\r\n              }\r\n            </div>\r\n            </div>\r\n            )}\r\n            else { return (\r\n        <div>\r\n            <h1>Contact</h1>\r\n            <p>\r\n                This is the Contact screen. You can contact me at <a href=\"mailto:test@test.com\"></a>. \r\n            </p>\r\n            <form>\r\n                <label>Email</label><br/>\r\n                <input type=\"email\" name=\"email\" /><br/>\r\n                <label>Message</label><br/>\r\n                <textarea name=\"message\"></textarea><br/>\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        </div>\r\n        )\r\n}}\r\n\r\nexport default ContactScreen;","import { useContext, useEffect, useState } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SiteContext } from \"../../context\";\r\nimport { ICompanyData } from \"../../types\";\r\nimport PostCallDB from \"../Compare/PostCallDB\";\r\n\r\ninterface CompanyCardProps {\r\n  companyInfo: ICompanyData[],\r\n\r\n}\r\n\r\nconst userHistoryCard = ({ companyInfo }: CompanyCardProps) => {\r\n  return (\r\n\r\n    <>\r\n      {companyInfo?.map((c: ICompanyData) => {\r\n        return (\r\n          <div className=\"col-md-3  mt-5 ml-5\">\r\n            <Card style={{ width: '100%', minHeight: \"400px\" }}>\r\n              <Card.Body>\r\n                <Card.Title>{c.name}</Card.Title>\r\n                <Card.Text>VAT : {c.vat} </Card.Text>\r\n                <Card.Text>Adress: {c.address}</Card.Text>\r\n                <Card.Text>Publishing Date: {c.depositDate}</Card.Text>\r\n                <Card.Text>Equity: {c.equitity}</Card.Text>\r\n                <Card.Text>Debts: {c.debt}</Card.Text>\r\n                <Card.Text>Profit: {c.companyProfit}</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        )\r\n      }\r\n      )\r\n      }\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default userHistoryCard;","import { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport { ICompanyData, HistoryResponse } from \"../../types\";\r\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\r\nimport HistoryCall from \"../../App\";\r\nimport UserHistoryCard from \"./userHistoryCard\";\r\n\r\n\r\ninterface UserHistoryProps {\r\n\r\n    userSessionHistoryCompanies: ICompanyData[],\r\n    setHistoryCompanies: React.Dispatch<React.SetStateAction<ICompanyData[]>>\r\n\r\n}\r\n\r\n\r\nconst UserHistory = ({ userSessionHistoryCompanies, setHistoryCompanies }: UserHistoryProps) => {\r\n    let history = userSessionHistoryCompanies;\r\n\r\n    //renders that the user will see when they've provide the data, condition statements make sure the user will be notified when wrong inputs have been made.\r\n    //companyCard has been replaced so the component will only render the userHistory without triggering the PostCallNBB component.\r\n    if (history.length > 0) {\r\n\r\n        return (\r\n            <>\r\n                <UserHistoryCard companyInfo={history} />\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Failed to find any results, please try again using valid VAT numbers!\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UserHistory","import { ChangeEventHandler, useContext, useState } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SiteContext } from \"../../context\";\r\nimport { ICompanyData } from \"../../types\";\r\nimport UserHistory from '../../components/UserHistory/UserHistory';\r\nimport auth from \"../../class/Auth/Auth\";\r\n\r\ninterface HistoryScreenProps {\r\n    userSessionHistoryCompanies: ICompanyData[],\r\n    setHistoryCompanies: React.Dispatch<React.SetStateAction<ICompanyData[]>>\r\n    setSearch:Function\r\n}\r\n\r\nconst HistoryScreen = ({userSessionHistoryCompanies, setHistoryCompanies,setSearch} : HistoryScreenProps) => {\r\n\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n       \r\n        setSearch(event.target.value);\r\n\r\n        \r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            <input type=\"text\" className=\"form-contol mt-5 \" onChange={handleChange} />\r\n            </div>\r\n         \r\n         </div>\r\n         <div className=\"row\">\r\n             <div className=\"col-12 mt-5\"> <h1 className=\"text-center\"> History</h1></div>\r\n         </div>\r\n        <div className=\"row\">\r\n        <UserHistory userSessionHistoryCompanies={userSessionHistoryCompanies} setHistoryCompanies= {setHistoryCompanies}></UserHistory>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HistoryScreen;","import { ChangeEventHandler, MouseEventHandler, useReducer, useState } from \"react\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport ILoginUser from \"../../interface/ILoginForm/ILoginUser\";\r\nimport Alert from \"../Alert/Alert\";\r\nconst base =    cookie.GetCookies(\"base\");\r\ninterface LoginProps {\r\n    setAuth: React.Dispatch<React.SetStateAction<boolean>>\r\n    loggedin : boolean\r\n}\r\n\r\nconst Login=({setAuth,loggedin} : LoginProps)=>{\r\n\r\n    \r\n    const [user, setUser] = useState<ILoginUser>({\r\n        Email:  \"\",\r\n        Password:  \"\",\r\n    });\r\n\r\n    const [err,setErr] = useState<boolean>(false);\r\n    const [success,setsuccess] = useState<boolean>(false);\r\n    const [errString,setErrString] = useState<string[]>([]);\r\n\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n       // console.log(event.target.id);\r\n       type ObjectKey = keyof typeof userHold; // this will dynamically select key position of the js object\r\n        let userHold:ILoginUser = {  Email:  \"\",\r\n                                        Password: \"\"\r\n                                    };\r\n\r\n         // hold old values                            \r\n        for (const [key, value] of Object.entries(user)) {\r\n            const  p  = key as ObjectKey\r\n            userHold[p] = value;\r\n        }                    \r\n        \r\n        const  x  = event.target.id as ObjectKey\r\n        userHold[x] = event.target.value;\r\n    \r\n        setUser(userHold);\r\n                            \r\n      }\r\n\r\n      const send :MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n        \r\n        event.preventDefault()\r\n        console.log(user)\r\n            fetch(base+\"/api/Auth/login\",{\r\n             \r\n                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                    mode: 'cors', // no-cors, *cors, same-origin\r\n                   // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached,\r\n                   credentials:\"same-origin\",\r\n                   headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                    \"Access-Control-Allow-Methods\": \"OPTIONS, GET, POST\"\r\n\r\n                  },\r\n                    body: JSON.stringify(user)\r\n                    \r\n            }).then(e=>e.json())\r\n            .then(e => {\r\n                \r\n                console.log(e)\r\n                if(e.hasError || typeof e.errors == \"object\"){\r\n\r\n                    let hold = [];\r\n                    if(typeof e.errors == \"object\"){\r\n                    for (const [key, value] of Object.entries(e.errors)) {\r\n                       hold.push(\"-\"+key+\": \"+value);\r\n                    }                   \r\n                 }else{\r\n                    hold.push(e.error );\r\n                 }\r\n                    \r\n                    setErr(true)\r\n\r\n                    setErrString(hold);\r\n                    \r\n\r\n\r\n                }else{\r\n                    setErr(false)\r\n                }\r\n\r\n                if(!e.hasError && e.errors === undefined){\r\n                    cookie.SetCookie(\"auth\",\"true\",1);\r\n                    cookie.SetCookie(\"token\",e.token,1);\r\n                    console.log(e)\r\n                    setsuccess(true)\r\n                    setAuth(true)\r\n                    window.location.replace('home');\r\n\r\n                }else{\r\n                    setsuccess(false)\r\n                }\r\n            })\r\n            .catch(err=> console.log(err))\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <>\r\n                   <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6 col-sm-12 offset-md-3\">\r\n                        <form action=\"\">\r\n                    \r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"Email\" aria-describedby=\"emailHelp\" onChange={handleChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"examplePasssword1\" className=\"form-label\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"Password\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={send}>Log In</button>\r\n                       \r\n                     \r\n                            \r\n                        </form>\r\n                      \r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport Login from \"../../components/Login/LoginForm\";\r\n\r\n\r\ninterface LoginScreenProps {\r\n    setAuth: React.Dispatch<React.SetStateAction<boolean>>\r\n    loggedin : boolean\r\n}\r\n    \r\n\r\nconst LoginScreen =({setAuth,loggedin} : LoginScreenProps) => {\r\n    return (\r\n        < div>\r\n        <Login setAuth={setAuth} loggedin = {loggedin}/>\r\n\r\n        </div>)\r\n}\r\nexport default LoginScreen;","import { createContext } from \"react\";\r\nimport { ICompanyData } from \"./types\";\r\n\r\nexport interface SiteContext { \r\n    companies: ICompanyData[];\r\n}\r\n\r\nexport const SiteContext = createContext<SiteContext>({ \r\n    companies: [],\r\n});","import IAlert from \"../../interface/IAlert/IAlert\";\r\n\r\n\r\n\r\nconst Alert = ({type,msg}:IAlert)=>{\r\n\r\n   return (<>\r\n        <div className={`alert alert-${type}`} role=\"alert\">\r\n            {msg.map(e=> {\r\n                return (<p>{e}</p>)\r\n            }\r\n                )}\r\n        </div>\r\n    \r\n    </>)\r\n\r\n}\r\n\r\nexport default Alert;","import { ChangeEventHandler, MouseEventHandler, useReducer, useState } from \"react\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport ICreateUser from \"../../interface/IRegisterForm/ICreateUser\";\r\nimport Alert from \"../Alert/Alert\";\r\n\r\nconst base =    cookie.GetCookies(\"base\");\r\n\r\nconst RegisterForm = ()=>{\r\n\r\n    const [user, setUser] = useState<ICreateUser>({\r\n        Email:  \"\",\r\n        LastName:  \"\",\r\n        Password:  \"\",\r\n        FristName:  \"\",\r\n        ConfirmPassword: \"\"\r\n    });\r\n\r\n    const [err,setErr] = useState<boolean>(false);\r\n    const [success,setsuccess] = useState<boolean>(false);\r\n    const [errString,setErrString] = useState<string[]>([]);\r\n\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n       // console.log(event.target.id);\r\n       type ObjectKey = keyof typeof userHold; // this will dynamically select key position of the js object\r\n        let userHold:ICreateUser = {  Email:  \"user\",\r\n                                        LastName:  \"\",\r\n                                        Password:  \"\",\r\n                                        FristName:  \"\",\r\n                                        ConfirmPassword: \"\"\r\n                                    };\r\n\r\n         // hold old values                            \r\n        for (const [key, value] of Object.entries(user)) {\r\n            const  p  = key as ObjectKey\r\n            userHold[p] = value;\r\n        }                    \r\n        \r\n        const  x  = event.target.id as ObjectKey\r\n        userHold[x] = event.target.value;\r\n    \r\n        setUser(userHold);\r\n                            \r\n      }\r\n\r\n      const send :MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n        event.preventDefault()\r\n            fetch(base+\"/api/register\",{\r\n             \r\n                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                    mode: 'cors', // no-cors, *cors, same-origin\r\n                   // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                      \"Access-Control-Allow-Origin\": \"*\",\r\n                      \"Access-Control-Allow-Credentials\": \"true\",\r\n                      \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                      \"Access-Control-Allow-Methods\": \"OPTIONS, GET, POST\"\r\n\r\n                    },\r\n                    body: JSON.stringify(user)\r\n                    \r\n            }).then(e=>e.json())\r\n            .then(e => {\r\n                console.log(e)\r\n                if(e.hasError || typeof e.errors == \"object\"){\r\n                    let hold = [];\r\n                    if(typeof e.errors == \"object\"){\r\n                    for (const [key, value] of Object.entries(e.errors)) {\r\n                       hold.push(\"-\"+key+\": \"+value);\r\n                    }                   \r\n                 }else{\r\n                    hold.push(e.error );\r\n                 }\r\n                    \r\n                    setErr(true)\r\n                    setErrString(hold);\r\n                    \r\n\r\n\r\n                }else{\r\n                    setErr(false)\r\n                }\r\n\r\n                if(!e.hasError && e.errors === undefined){\r\n                    \r\n                    setsuccess(true)\r\n                }else{\r\n                    setsuccess(false)\r\n                }\r\n            })\r\n            .catch(err=> console.log(err))\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {err&&<Alert type=\"danger mt-5 col-6 offset-md-3\" msg={errString}></Alert>}\r\n          {success&&<Alert type=\"success text-center mt-5 col-6 offset-md-3\" msg={[\"Done\"]}></Alert>}\r\n               \r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6 col-sm-12 offset-md-3\">\r\n                        <form action=\"\">\r\n                    \r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"Email\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Achter naam</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"LastName\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Voornaam</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"FristName\" aria-describedby=\"emailHelp\"  onChange={handleChange} />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Paswoord</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"Password\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Herhaal</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"ConfirmPassword\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n                       \r\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={send}>Submit</button>\r\n                            \r\n                        </form>\r\n                      \r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n       \r\n        \r\n     \r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default RegisterForm;","import RegisterForm from \"../../components/register/RegisterForm\";\r\n\r\n\r\n\r\nconst Register = ()=>{\r\n\r\n    return (\r\n            <RegisterForm></RegisterForm>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Register;","import React, { ChangeEventHandler, MouseEventHandler, useState, useEffect} from 'react';\r\nimport styles from './App.module.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport HomeScreen from './screens/HomeScreen/HomeScreen';\r\nimport ContactScreen from './screens/ContactScreen/ContactScreen';\r\nimport HistoryScreen from './screens/HistoryScreen/HistoryScreen';\r\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\r\nimport { ICompanyData, HistoryResponse } from './types';\r\nimport { SiteContext } from './context';\r\nimport { Form } from 'react-bootstrap/lib/Navbar';\r\nimport Register from './screens/Register/Register';\r\nimport { Container } from 'react-bootstrap';\r\nimport auth from \"./class/Auth/Auth\";\r\nimport cookie from \"./class/Cookie/Cookie\";\r\nconst base =    cookie.GetCookies(\"base\");\r\n\r\nfunction App() {\r\n  const [userSessionHistoryCompanies, setHistoryCompanies] = useState<ICompanyData[]>([]);\r\n  const [companies, setCompanies] = useState<ICompanyData[]>([]);\r\n  const [companyVAT, SetInputVat] = useState<string[]>([]);\r\n  const [vatArray, setVatArray] = useState<string[]>([]);\r\n  const [companyInfo, setCompanyInfo] = useState<ICompanyData[]>([]);\r\n  const [loggedin, setAuth] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  const setSearchHistory = (search:string)=>{\r\n  \r\n      setSearch(search);\r\n  }\r\n\r\n  const submitButtonCompareForm: MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n    event.preventDefault();\r\n    SetInputVat(vatArray);\r\n    setVatArray([]);\r\n  }\r\n\r\n\r\n\r\n  const HistoryCall= async () => {\r\n    \r\n   \r\n    try {\r\n      setLoading(true)\r\n    \r\n    \r\n      let url = `${base}/api/history/history/all`;\r\n    \r\n      if(search.length > 0 ) url = `${base}/api/history/${search}/history`;\r\n     \r\n      let response = await fetch(url, {\r\n          method: 'GET',\r\n          headers: {\r\n              'content-type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*',\r\n              'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\r\n          }\r\n      });\r\n\r\n      auth.destroy(response.status);\r\n \r\n      const data  =  await response.json();\r\n      return data\r\n\r\n      \r\n  } catch (error) {\r\n      console.log(error)  \r\n    \r\n    \r\n    }\r\n   }\r\n\r\n   useEffect(() => {\r\n\r\n  if(cookie.GetCookies(\"base\") == \"\"){\r\n\r\n    cookie.SetCookie(\"base\",\"https://localhost:44391\",2)\r\n    cookie.SetCookie(\"checkBase\",\"flase\",2);\r\n    cookie.DeleteCookie(\"auth\")\r\n    cookie.DeleteCookie(\"token\")\r\n\r\n  }\r\n\r\n\r\n\r\nif(auth.Auth()){\r\n  \r\n  HistoryCall().then((e:HistoryResponse)=>{\r\n    if(e.sendOBJ != null){\r\n     setHistoryCompanies(e.sendOBJ.history);\r\n            setLoading(false)\r\n            console.log(loading);\r\n    }}\r\n    \r\n    )\r\n\r\n}\r\n\r\n  \r\n  }, [loggedin,search]);\r\n\r\nlet vat = '123' \r\n\r\n\r\n\r\n  return (\r\n    <SiteContext.Provider value={{companies:companies}}>\r\n      <div className={`${styles.App}`}>\r\n        <BrowserRouter>\r\n\r\n        <NavBar/>\r\n        <Container>\r\n            <Switch>\r\n              <Route path=\"/home\" exact >\r\n                <HomeScreen  vatArray = {vatArray} setVatArray = {setVatArray} submit = {submitButtonCompareForm} companyVAT = {companyVAT} companyInfo = {companyInfo} setCompanyInfo = {setCompanyInfo} userSessionHistoryCompanies = {userSessionHistoryCompanies} />\r\n              </Route>\r\n              <Route path=\"/contact\" exact>\r\n                <ContactScreen userSessionHistoryCompanies={userSessionHistoryCompanies} />\r\n              </Route>\r\n              <Route path=\"/UserHistory\" exact>\r\n                <HistoryScreen userSessionHistoryCompanies={userSessionHistoryCompanies} setHistoryCompanies= {setHistoryCompanies} setSearch={setSearchHistory}/>\r\n              </Route>\r\n              <Route path=\"/Login\" exact>\r\n                <LoginScreen setAuth={setAuth} loggedin = {loggedin} />\r\n              </Route>\r\n              <Route path=\"/register\" exact>\r\n                <Register />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <Redirect to=\"/home\" />\r\n            </Route>\r\n            </Switch>\r\n          </Container>\r\n        </BrowserRouter>\r\n\r\n      </div>\r\n    </SiteContext.Provider>\r\n  );\r\n}\r\n//commentje\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// Importing the Bootstrap CSS\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}