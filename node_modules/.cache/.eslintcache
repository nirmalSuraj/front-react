[{"C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\index.tsx":"1","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\App.tsx":"3","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\context.ts":"4","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\screens\\ContactScreen\\ContactScreen.tsx":"5","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\screens\\HomeScreen\\HomeScreen.tsx":"6","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\NavBar\\NavBar.tsx":"7","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\screens\\LoginScreen\\LoginScreen.tsx":"8","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\screens\\Register\\Register.tsx":"9","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\register\\RegisterForm.tsx":"10","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Alert\\Alert.tsx":"11","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\class\\Auth\\Auth.ts":"12","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\class\\Utility\\Utility.ts":"13","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\class\\Cookie\\Cookie.ts":"14","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Login\\LoginForm.tsx":"15","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\screens\\HistoryScreen\\HistoryScreen.tsx":"16","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Compare\\CompareForm.tsx":"17","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\UserHistory\\UserHistory.tsx":"18","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\CompanyCard\\CompanyCard.tsx":"19","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Logout\\LogoutButton.tsx":"20","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Compare\\ApiCallNBB.tsx":"21","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\class\\Service\\Compare.ts":"22","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\UserHistory\\userHistoryCard.tsx":"23","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Compare\\PostCallDB.tsx":"24"},{"size":599,"mtime":1650724389319,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1650724389320,"results":"27","hashOfConfig":"26"},{"size":4430,"mtime":1653730383182,"results":"28","hashOfConfig":"26"},{"size":234,"mtime":1652514304570,"results":"29","hashOfConfig":"26"},{"size":2025,"mtime":1653340345790,"results":"30","hashOfConfig":"26"},{"size":1235,"mtime":1653340345791,"results":"31","hashOfConfig":"26"},{"size":3110,"mtime":1653728536402,"results":"32","hashOfConfig":"26"},{"size":428,"mtime":1652514304579,"results":"33","hashOfConfig":"26"},{"size":202,"mtime":1650762030894,"results":"34","hashOfConfig":"26"},{"size":6066,"mtime":1653728536399,"results":"35","hashOfConfig":"26"},{"size":336,"mtime":1650908936233,"results":"36","hashOfConfig":"26"},{"size":727,"mtime":1652535511765,"results":"37","hashOfConfig":"26"},{"size":318,"mtime":1650904912428,"results":"38","hashOfConfig":"26"},{"size":2923,"mtime":1650905056934,"results":"39","hashOfConfig":"26"},{"size":4976,"mtime":1653728536399,"results":"40","hashOfConfig":"26"},{"size":1488,"mtime":1653728598349,"results":"41","hashOfConfig":"26"},{"size":3808,"mtime":1653683685772,"results":"42","hashOfConfig":"26"},{"size":1361,"mtime":1653730383183,"results":"43","hashOfConfig":"26"},{"size":1654,"mtime":1653730383183,"results":"44","hashOfConfig":"26"},{"size":2803,"mtime":1653728536401,"results":"45","hashOfConfig":"26"},{"size":7589,"mtime":1653763601782,"results":"46","hashOfConfig":"26"},{"size":2749,"mtime":1653730383182,"results":"47","hashOfConfig":"26"},{"size":1254,"mtime":1653730383183,"results":"48","hashOfConfig":"26"},{"size":6835,"mtime":1653732841062,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1jh80nt",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"52"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},"C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\index.tsx",[],["119","120"],"C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\App.tsx",["121","122","123","124","125","126","127"],"import React, { ChangeEventHandler, MouseEventHandler, useState, useEffect} from 'react';\r\nimport styles from './App.module.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport HomeScreen from './screens/HomeScreen/HomeScreen';\r\nimport ContactScreen from './screens/ContactScreen/ContactScreen';\r\nimport HistoryScreen from './screens/HistoryScreen/HistoryScreen';\r\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\r\nimport { ICompanyData, HistoryResponse } from './types';\r\nimport { SiteContext } from './context';\r\nimport { Form } from 'react-bootstrap/lib/Navbar';\r\nimport Register from './screens/Register/Register';\r\nimport { Container } from 'react-bootstrap';\r\nimport auth from \"./class/Auth/Auth\";\r\nimport cookie from \"./class/Cookie/Cookie\";\r\nconst base =    cookie.GetCookies(\"base\");\r\n\r\nfunction App() {\r\n  const [userSessionHistoryCompanies, setHistoryCompanies] = useState<ICompanyData[]>([]);\r\n  const [companies, setCompanies] = useState<ICompanyData[]>([]);\r\n  const [companyVAT, SetInputVat] = useState<string[]>([]);\r\n  const [vatArray, setVatArray] = useState<string[]>([]);\r\n  const [companyInfo, setCompanyInfo] = useState<ICompanyData[]>([]);\r\n  const [loggedin, setAuth] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  const setSearchHistory = (search:string)=>{\r\n  \r\n      setSearch(search);\r\n  }\r\n\r\n  const submitButtonCompareForm: MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n    event.preventDefault();\r\n    SetInputVat(vatArray);\r\n    setVatArray([]);\r\n  }\r\n\r\n\r\n\r\n  const HistoryCall= async () => {\r\n    \r\n   \r\n    try {\r\n      setLoading(true)\r\n    \r\n    \r\n      let url = `${base}/api/history/history/all`;\r\n    \r\n      if(search.length > 0 ) url = `${base}/api/history/${search}/history`;\r\n     \r\n      let response = await fetch(url, {\r\n          method: 'GET',\r\n          headers: {\r\n              'content-type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*',\r\n              'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\r\n          }\r\n      });\r\n\r\n      auth.destroy(response.status);\r\n \r\n      const data  =  await response.json();\r\n      return data\r\n\r\n      \r\n  } catch (error) {\r\n      console.log(error)  \r\n    \r\n    \r\n    }\r\n   }\r\n\r\n   useEffect(() => {\r\n\r\n  if(cookie.GetCookies(\"base\") == \"\"){\r\n\r\n    cookie.SetCookie(\"base\",\"https://localhost:44391\",2)\r\n    cookie.SetCookie(\"checkBase\",\"flase\",2);\r\n    cookie.DeleteCookie(\"auth\")\r\n    cookie.DeleteCookie(\"token\")\r\n\r\n  }\r\n\r\n\r\n\r\nif(auth.Auth()){\r\n  \r\n  HistoryCall().then((e:HistoryResponse)=>{\r\n    if(e.sendOBJ != null){\r\n     setHistoryCompanies(e.sendOBJ.history);\r\n            setLoading(false)\r\n            console.log(loading);\r\n    }}\r\n    \r\n    )\r\n\r\n}\r\n\r\n  \r\n  }, [loggedin,search]);\r\n\r\nlet vat = '123' \r\n\r\n\r\n\r\n  return (\r\n    <SiteContext.Provider value={{companies:companies}}>\r\n      <div className={`${styles.App}`}>\r\n        <BrowserRouter>\r\n\r\n        <NavBar/>\r\n        <Container>\r\n            <Switch>\r\n              <Route path=\"/home\" exact >\r\n                <HomeScreen  vatArray = {vatArray} setVatArray = {setVatArray} submit = {submitButtonCompareForm} companyVAT = {companyVAT} companyInfo = {companyInfo} setCompanyInfo = {setCompanyInfo} userSessionHistoryCompanies = {userSessionHistoryCompanies} />\r\n              </Route>\r\n              <Route path=\"/contact\" exact>\r\n                <ContactScreen userSessionHistoryCompanies={userSessionHistoryCompanies} />\r\n              </Route>\r\n              <Route path=\"/UserHistory\" exact>\r\n                <HistoryScreen userSessionHistoryCompanies={userSessionHistoryCompanies} setHistoryCompanies= {setHistoryCompanies} setSearch={setSearchHistory}/>\r\n              </Route>\r\n              <Route path=\"/Login\" exact>\r\n                <LoginScreen setAuth={setAuth} loggedin = {loggedin} />\r\n              </Route>\r\n              <Route path=\"/register\" exact>\r\n                <Register />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <Redirect to=\"/home\" />\r\n            </Route>\r\n            </Switch>\r\n          </Container>\r\n        </BrowserRouter>\r\n\r\n      </div>\r\n    </SiteContext.Provider>\r\n  );\r\n}\r\n//commentje\r\n\r\nexport default App;\r\n","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\context.ts",["128"],"import { createContext } from \"react\";\r\nimport { ICompanyData } from \"./types\";\r\n\r\nexport interface SiteContext { \r\n    companies: ICompanyData[];\r\n}\r\n\r\nexport const SiteContext = createContext<SiteContext>({ \r\n    companies: [],\r\n});","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\screens\\ContactScreen\\ContactScreen.tsx",["129","130","131","132","133","134"],"import { useEffect, useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport { ICompanyData, HistoryResponse } from \"../../types\";\r\n\r\n\r\ninterface ContactScreenProps {userSessionHistoryCompanies : ICompanyData[]\r\n\r\n}\r\n\r\nconst ContactScreen = ({userSessionHistoryCompanies} : ContactScreenProps) => {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n\r\n\r\n       if (loading === false) {return (\r\n        <div>\r\n            <div className=\"col d-flex justify-content-center\">\r\n              { userSessionHistoryCompanies?.map((c: ICompanyData) => {\r\n                    return (\r\n                      <Card style={{ width: '60%' }}>\r\n                        <Card.Body>\r\n                          <Card.Title>{c.name}</Card.Title>\r\n                          <Card.Text>VAT : {c.vat} </Card.Text>\r\n                          <Card.Text>Adress: {c.address}</Card.Text>\r\n                          <Card.Text>Publishing Date: {c.depositDate}</Card.Text>\r\n                          <Card.Text>Equity: {c.equitity}</Card.Text>\r\n                          <Card.Text>Debts: {c.debt}</Card.Text>\r\n                          <Card.Text>Profit: {c.companyProfit}</Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    )\r\n                  }\r\n                  )\r\n              }\r\n            </div>\r\n            </div>\r\n            )}\r\n            else { return (\r\n        <div>\r\n            <h1>Contact</h1>\r\n            <p>\r\n                This is the Contact screen. You can contact me at <a href=\"mailto:test@test.com\"></a>. \r\n            </p>\r\n            <form>\r\n                <label>Email</label><br/>\r\n                <input type=\"email\" name=\"email\" /><br/>\r\n                <label>Message</label><br/>\r\n                <textarea name=\"message\"></textarea><br/>\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        </div>\r\n        )\r\n}}\r\n\r\nexport default ContactScreen;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\screens\\HomeScreen\\HomeScreen.tsx",["135","136","137","138","139","140","141","142","143","144"],"import Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport React, { useContext, useEffect, useState, ChangeEventHandler, MouseEventHandler } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ICompanyData } from \"../../types\";\r\nimport CompanyCard from \"../../components/CompanyCard/CompanyCard\";\r\nimport CompareForm from '../../components/Compare/CompareForm';\r\n\r\n\r\ninterface HomeScreenProps {\r\n  companyVAT: string[],\r\n  companyInfo: ICompanyData[],\r\n  vatArray: string[],\r\n  setCompanyInfo: React.Dispatch<React.SetStateAction<ICompanyData[]>>,\r\n  submit: React.MouseEventHandler<HTMLButtonElement>,\r\n  setVatArray: React.Dispatch<React.SetStateAction<string[]>>\r\n  userSessionHistoryCompanies: ICompanyData[]\r\n}\r\n\r\nconst HomeScreen = ({companyInfo, companyVAT,vatArray,setVatArray, submit, setCompanyInfo,userSessionHistoryCompanies }: HomeScreenProps) => {\r\n\r\n  return (\r\n    <main>\r\n      <CompareForm companyVAT={companyVAT} submit={submit} vatArray = {vatArray} setVatArray={setVatArray} companyInfo={companyInfo}  setCompanyInfo = {setCompanyInfo} userSessionHistoryCompanies = {userSessionHistoryCompanies}/>\r\n    </main>\r\n  );\r\n}\r\nexport default HomeScreen;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\NavBar\\NavBar.tsx",["145","146","147","148","149","150","151"],"import { useContext } from \"react\";\r\nimport { Button, Container, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport { SiteContext } from \"../../context\";\r\nimport Logout from \"../Logout/LogoutButton\";\r\n\r\n\r\n\r\n\r\n\r\ninterface NavBarProps {\r\n}\r\n\r\nconst NavBar = ({ }: NavBarProps) => {\r\n    const check:boolean = auth.Auth();\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand href=\"#home\">IT Project Comparison</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        {check?\r\n                        <>\r\n                        <Nav.Link as={NavLink} to=\"/home\">Home</Nav.Link>\r\n                        <Nav.Link as={NavLink} to=\"/UserHistory\">User History</Nav.Link>\r\n                        <Nav.Link as={NavLink} to=\"/contact\">Contact Us</Nav.Link>\r\n                        <Nav.Item className=\"ml-auto\">\r\n                        <Logout></Logout>\r\n                        </Nav.Item>\r\n                        </>\r\n                    \r\n                        : \r\n                        <>\r\n                         <Nav.Link as={NavLink} to=\"/home\">Home</Nav.Link>\r\n                          <Nav.Link as={NavLink} to=\"/register\">Registeren</Nav.Link>\r\n                          <Nav.Link as={NavLink} to=\"/login\">Login</Nav.Link>\r\n                        </>\r\n                        \r\n                        }\r\n                \r\n                <div className=\"ml-5\">\r\n                    <input type=\"button\" onClick={()=>{\r\n                            cookie.SetCookie(\"base\",\"https://localhost:44391\",2)\r\n                            cookie.SetCookie(\"checkBase\",\"flase\",2);\r\n                            cookie.DeleteCookie(\"auth\")\r\n                            cookie.DeleteCookie(\"token\")\r\n                            window.location.reload();\r\n\r\n                        }}  value=\"Local\" className={cookie.GetCookies(\"checkBase\")==\"flase\"?\"btn btn-success\":\"btn btn-info\" } />\r\n\r\n                        <input type=\"button\" onClick={()=>{\r\n                        \r\n                                cookie.SetCookie(\"base\",\"https://project202220220524193351.azurewebsites.net\",2)\r\n                                cookie.SetCookie(\"checkBase\",\"true\",2);\r\n                                cookie.DeleteCookie(\"auth\")\r\n                                cookie.DeleteCookie(\"token\")\r\n                                window.location.reload();\r\n                        }}  value=\"DB\" className={cookie.GetCookies(\"checkBase\")==\"flase\"?\"btn btn-info\":\"btn btn-success\" } />\r\n\r\n\r\n                </div>\r\n\r\n                  \r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\screens\\LoginScreen\\LoginScreen.tsx",["152"],"import React, { useState } from \"react\";\r\nimport Login from \"../../components/Login/LoginForm\";\r\n\r\n\r\ninterface LoginScreenProps {\r\n    setAuth: React.Dispatch<React.SetStateAction<boolean>>\r\n    loggedin : boolean\r\n}\r\n    \r\n\r\nconst LoginScreen =({setAuth,loggedin} : LoginScreenProps) => {\r\n    return (\r\n        < div>\r\n        <Login setAuth={setAuth} loggedin = {loggedin}/>\r\n\r\n        </div>)\r\n}\r\nexport default LoginScreen;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\screens\\Register\\Register.tsx",[],"C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\register\\RegisterForm.tsx",["153"],"import { ChangeEventHandler, MouseEventHandler, useReducer, useState } from \"react\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport ICreateUser from \"../../interface/IRegisterForm/ICreateUser\";\r\nimport Alert from \"../Alert/Alert\";\r\n\r\nconst base =    cookie.GetCookies(\"base\");\r\n\r\nconst RegisterForm = ()=>{\r\n\r\n    const [user, setUser] = useState<ICreateUser>({\r\n        Email:  \"\",\r\n        LastName:  \"\",\r\n        Password:  \"\",\r\n        FristName:  \"\",\r\n        ConfirmPassword: \"\"\r\n    });\r\n\r\n    const [err,setErr] = useState<boolean>(false);\r\n    const [success,setsuccess] = useState<boolean>(false);\r\n    const [errString,setErrString] = useState<string[]>([]);\r\n\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n       // console.log(event.target.id);\r\n       type ObjectKey = keyof typeof userHold; // this will dynamically select key position of the js object\r\n        let userHold:ICreateUser = {  Email:  \"user\",\r\n                                        LastName:  \"\",\r\n                                        Password:  \"\",\r\n                                        FristName:  \"\",\r\n                                        ConfirmPassword: \"\"\r\n                                    };\r\n\r\n         // hold old values                            \r\n        for (const [key, value] of Object.entries(user)) {\r\n            const  p  = key as ObjectKey\r\n            userHold[p] = value;\r\n        }                    \r\n        \r\n        const  x  = event.target.id as ObjectKey\r\n        userHold[x] = event.target.value;\r\n    \r\n        setUser(userHold);\r\n                            \r\n      }\r\n\r\n      const send :MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n        event.preventDefault()\r\n            fetch(base+\"/api/register\",{\r\n             \r\n                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                    mode: 'cors', // no-cors, *cors, same-origin\r\n                   // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                      \"Access-Control-Allow-Origin\": \"*\",\r\n                      \"Access-Control-Allow-Credentials\": \"true\",\r\n                      \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                      \"Access-Control-Allow-Methods\": \"OPTIONS, GET, POST\"\r\n\r\n                    },\r\n                    body: JSON.stringify(user)\r\n                    \r\n            }).then(e=>e.json())\r\n            .then(e => {\r\n                console.log(e)\r\n                if(e.hasError || typeof e.errors == \"object\"){\r\n                    let hold = [];\r\n                    if(typeof e.errors == \"object\"){\r\n                    for (const [key, value] of Object.entries(e.errors)) {\r\n                       hold.push(\"-\"+key+\": \"+value);\r\n                    }                   \r\n                 }else{\r\n                    hold.push(e.error );\r\n                 }\r\n                    \r\n                    setErr(true)\r\n                    setErrString(hold);\r\n                    \r\n\r\n\r\n                }else{\r\n                    setErr(false)\r\n                }\r\n\r\n                if(!e.hasError && e.errors === undefined){\r\n                    \r\n                    setsuccess(true)\r\n                }else{\r\n                    setsuccess(false)\r\n                }\r\n            })\r\n            .catch(err=> console.log(err))\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {err&&<Alert type=\"danger mt-5 col-6 offset-md-3\" msg={errString}></Alert>}\r\n          {success&&<Alert type=\"success text-center mt-5 col-6 offset-md-3\" msg={[\"Done\"]}></Alert>}\r\n               \r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6 col-sm-12 offset-md-3\">\r\n                        <form action=\"\">\r\n                    \r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"Email\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Achter naam</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"LastName\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Voornaam</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"FristName\" aria-describedby=\"emailHelp\"  onChange={handleChange} />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Paswoord</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"Password\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Herhaal</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"ConfirmPassword\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n                       \r\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={send}>Submit</button>\r\n                            \r\n                        </form>\r\n                      \r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n       \r\n        \r\n     \r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default RegisterForm;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Alert\\Alert.tsx",[],"C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\class\\Auth\\Auth.ts",["154","155"],"\r\nimport { type } from \"os\";\r\nimport cookie from \"../Cookie/Cookie\";\r\nimport utility from \"../Utility/Utility\";\r\n\r\nclass Auth{\r\n\r\n    /**\r\n     * \r\n     * @returns bool \r\n     * this function will return true if the user is authenticated else false\r\n     */\r\n\r\n    public Auth():boolean{\r\n        \r\n        \r\n        return utility.AuthSession(\"auth\");\r\n    }\r\n\r\n    /**\r\n     * this function will kill auth cookie\r\n     */\r\n\r\n    public destroy(status:number):void{\r\n       \r\n        if(typeof status !== \"undefined\"){\r\n            if(status >= 400 && status != 404){\r\n                cookie.DeleteCookie(\"auth\");\r\n            }\r\n        }\r\n\r\n      \r\n    }\r\n\r\n\r\n  \r\n\r\n    \r\n}\r\n\r\nconst auth = new Auth();\r\nexport  default auth;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\class\\Utility\\Utility.ts",[],"C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\class\\Cookie\\Cookie.ts",["156","157"],"class Cookie{\r\n                    /**\r\n                 * \r\n                 * @param name string\r\n                 * @returns string|null \r\n                 */\r\n\r\n            // Given a cookie key `name`, returns the value of\r\n            // the cookie or `null`, if the key is not found.\r\n            private  Cookie(name: string):string|null {\r\n                const nameLenPlus = (name.length + 1);\r\n\r\n\r\n                const val:string|null = document.cookie\r\n                    .split(';')\r\n                    .map(c => c.trim())\r\n                    .filter(cookie => {\r\n                        return cookie.substring(0, nameLenPlus) === `${name}=`;\r\n                    })\r\n                    .map(cookie => {\r\n                        return decodeURIComponent(cookie.substring(nameLenPlus));\r\n                    })[0] || null;\r\n            \r\n                    return val;\r\n            }\r\n\r\n\r\n            public  AuthSession(name:string):boolean{\r\n\r\n                if(this.Cookie(name) === null) return false;\r\n\r\n                if(this.Cookie(name) == \"true\") return true;\r\n                if(this.Cookie(name) == \"flase\") return true;\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n\r\n            \r\n\r\n            /**\r\n             * \r\n             * @param name  string name of the cookie\r\n             * @returns string value of the cookie\r\n             */\r\n\r\n            public  GetCookies(name:string):string|boolean{\r\n                const cookie:string|null = this.Cookie(name);\r\n                if(cookie === null) return false;\r\n\r\n                return cookie;\r\n\r\n            }\r\n\r\n            /**\r\n             * \r\n             * @param name string key cookie\r\n             * @param value string value of the cookie\r\n             * @param days number days  expires in 30 days\r\n             * @returns bool if the cookie was created then return true els false\r\n             */\r\n\r\n            public  SetCookie(name:string,value:any,days:number):boolean {\r\n                \r\n                let expires:string = \"\";\r\n\r\n                if (days) {\r\n                    var date = new Date();\r\n                    date.setTime(date.getTime() + (days*24*60*60*1000));\r\n                    expires = \"; expires=\" + date.toUTCString();\r\n                }\r\n                document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\r\n\r\n\r\n                if(this.GetCookies(name) !== null) return true;\r\n                else return false;\r\n\r\n            }\r\n\r\n            /**\r\n             * \r\n             * @param name string name cookie to delete\r\n             * @returns bool will return true\r\n             */\r\n            public DeleteCookie(name:string):boolean {\r\n                document.cookie = name +'=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n                \r\n                return true;\r\n\r\n            }\r\n}\r\n\r\n\r\nconst cookie = new Cookie();\r\n\r\nexport default cookie;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Login\\LoginForm.tsx",["158","159","160","161","162"],"import { ChangeEventHandler, MouseEventHandler, useReducer, useState } from \"react\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport ILoginUser from \"../../interface/ILoginForm/ILoginUser\";\r\nimport Alert from \"../Alert/Alert\";\r\nconst base =    cookie.GetCookies(\"base\");\r\ninterface LoginProps {\r\n    setAuth: React.Dispatch<React.SetStateAction<boolean>>\r\n    loggedin : boolean\r\n}\r\n\r\nconst Login=({setAuth,loggedin} : LoginProps)=>{\r\n\r\n    \r\n    const [user, setUser] = useState<ILoginUser>({\r\n        Email:  \"\",\r\n        Password:  \"\",\r\n    });\r\n\r\n    const [err,setErr] = useState<boolean>(false);\r\n    const [success,setsuccess] = useState<boolean>(false);\r\n    const [errString,setErrString] = useState<string[]>([]);\r\n\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n       // console.log(event.target.id);\r\n       type ObjectKey = keyof typeof userHold; // this will dynamically select key position of the js object\r\n        let userHold:ILoginUser = {  Email:  \"\",\r\n                                        Password: \"\"\r\n                                    };\r\n\r\n         // hold old values                            \r\n        for (const [key, value] of Object.entries(user)) {\r\n            const  p  = key as ObjectKey\r\n            userHold[p] = value;\r\n        }                    \r\n        \r\n        const  x  = event.target.id as ObjectKey\r\n        userHold[x] = event.target.value;\r\n    \r\n        setUser(userHold);\r\n                            \r\n      }\r\n\r\n      const send :MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n        \r\n        event.preventDefault()\r\n        console.log(user)\r\n            fetch(base+\"/api/Auth/login\",{\r\n             \r\n                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                    mode: 'cors', // no-cors, *cors, same-origin\r\n                   // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached,\r\n                   credentials:\"same-origin\",\r\n                   headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                    \"Access-Control-Allow-Methods\": \"OPTIONS, GET, POST\"\r\n\r\n                  },\r\n                    body: JSON.stringify(user)\r\n                    \r\n            }).then(e=>e.json())\r\n            .then(e => {\r\n                \r\n                console.log(e)\r\n                if(e.hasError || typeof e.errors == \"object\"){\r\n\r\n                    let hold = [];\r\n                    if(typeof e.errors == \"object\"){\r\n                    for (const [key, value] of Object.entries(e.errors)) {\r\n                       hold.push(\"-\"+key+\": \"+value);\r\n                    }                   \r\n                 }else{\r\n                    hold.push(e.error );\r\n                 }\r\n                    \r\n                    setErr(true)\r\n\r\n                    setErrString(hold);\r\n                    \r\n\r\n\r\n                }else{\r\n                    setErr(false)\r\n                }\r\n\r\n                if(!e.hasError && e.errors === undefined){\r\n                    cookie.SetCookie(\"auth\",\"true\",1);\r\n                    cookie.SetCookie(\"token\",e.token,1);\r\n                    console.log(e)\r\n                    setsuccess(true)\r\n                    setAuth(true)\r\n                    window.location.replace('home');\r\n\r\n                }else{\r\n                    setsuccess(false)\r\n                }\r\n            })\r\n            .catch(err=> console.log(err))\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <>\r\n                   <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6 col-sm-12 offset-md-3\">\r\n                        <form action=\"\">\r\n                    \r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"Email\" aria-describedby=\"emailHelp\" onChange={handleChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"examplePasssword1\" className=\"form-label\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"Password\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={send}>Log In</button>\r\n                       \r\n                     \r\n                            \r\n                        </form>\r\n                      \r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Login;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\screens\\HistoryScreen\\HistoryScreen.tsx",["163","164","165","166","167","168","169"],"import { ChangeEventHandler, useContext, useState } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SiteContext } from \"../../context\";\r\nimport { ICompanyData } from \"../../types\";\r\nimport UserHistory from '../../components/UserHistory/UserHistory';\r\nimport auth from \"../../class/Auth/Auth\";\r\n\r\ninterface HistoryScreenProps {\r\n    userSessionHistoryCompanies: ICompanyData[],\r\n    setHistoryCompanies: React.Dispatch<React.SetStateAction<ICompanyData[]>>\r\n    setSearch:Function\r\n}\r\n\r\nconst HistoryScreen = ({userSessionHistoryCompanies, setHistoryCompanies,setSearch} : HistoryScreenProps) => {\r\n\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n       \r\n        setSearch(event.target.value);\r\n\r\n        \r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            <input type=\"text\" className=\"form-contol mt-5 \" onChange={handleChange} />\r\n            </div>\r\n         \r\n         </div>\r\n         <div className=\"row\">\r\n             <div className=\"col-12 mt-5\"> <h1 className=\"text-center\"> History</h1></div>\r\n         </div>\r\n        <div className=\"row\">\r\n        <UserHistory userSessionHistoryCompanies={userSessionHistoryCompanies} setHistoryCompanies= {setHistoryCompanies}></UserHistory>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HistoryScreen;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Compare\\CompareForm.tsx",["170","171","172","173","174","175","176"],"import Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport React, { useContext, useEffect, useState, ChangeEventHandler, MouseEventHandler } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ICompanyData } from \"../../types\";\r\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\r\nimport ApiCallNBB from './ApiCallNBB';\r\n\r\ninterface CompareProps {\r\n  companyVAT: string[],\r\n  companyInfo: ICompanyData[],\r\n  vatArray: string[],\r\n  setCompanyInfo: React.Dispatch<React.SetStateAction<ICompanyData[]>>,\r\n  submit: React.MouseEventHandler<HTMLButtonElement>,\r\n  setVatArray: React.Dispatch<React.SetStateAction<string[]>>\r\n  userSessionHistoryCompanies: ICompanyData[]\r\n}\r\n\r\nconst CompareForm = ({ companyInfo, companyVAT, vatArray, submit, setCompanyInfo, setVatArray,userSessionHistoryCompanies }: CompareProps) => {\r\n\r\n  const handleVat: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    //checksum that makes sure only relevant data can be used to make the API call to the NBB.\r\n    const re = /^[0-9\\b]+$/;\r\n\r\n    var count: string[] = (event.target.value).split(\"\");\r\n    if (count.length === 10 && re.test(event.target.value)) {\r\n      setVatArray([...vatArray, event.target.value]);\r\n    }\r\n    \r\n  }\r\n  const clearHandler: MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n    window.location.reload();\r\n\r\n  }\r\n  let history = userSessionHistoryCompanies\r\n  //if data has entered the APICALLNBB will be called upon to make the fetch calls.\r\n  if (companyVAT.length !== 0) {\r\n\r\n    return (\r\n      <main>\r\n        <h1>NBB Company Comparison</h1>\r\n        <p>\r\n          Welcome to the Company Comparison Project.<br></br>\r\n          Enter two company VAT numbers to compare both key figures.\r\n        </p>\r\n\r\n\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formCompany1\" onChange={handleVat} >\r\n            <Form.Label>Company1VAT</Form.Label>\r\n            <Form.Control type=\"VAT\" placeholder=\"Enter VATNumber\"  />\r\n            <Form.Text className=\"text-muted\" >\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formCompany2\" onChange={handleVat}>\r\n            <Form.Label>Company2VAT</Form.Label>\r\n            <Form.Control type=\"VAT\" placeholder=\"Enter VATNumber\" />\r\n            <Form.Text className=\"text-muted\" >\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\" onClick={clearHandler}>\r\n            Clear\r\n          </Button>\r\n        </Form>\r\n\r\n        <ApiCallNBB companyVAT={companyVAT} companyInfo={companyInfo} setCompanyInfo={setCompanyInfo} />\r\n  \r\n      </main>\r\n    )\r\n  }\r\n\r\n  else {\r\n\r\n    return (\r\n      <main>\r\n        <h1>NBB Company Comparison</h1>\r\n        <p>\r\n          Welcome to the Company Comparison Project.<br></br>\r\n          Enter two company VAT numbers to compare both key figures.\r\n        </p>\r\n\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formCompany1\" onChange={handleVat} >\r\n            <Form.Label>Company1VAT</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter VATNumber\" />\r\n            <Form.Text className=\"text-muted\" >\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formCompany2\" onChange={handleVat}>\r\n            <Form.Label>Company2VAT</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter VATNumber\" pattern=\"[0-9]\" required />\r\n            <Form.Text className=\"text-muted\" >\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\" onClick={submit}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n      </main>\r\n\r\n\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default CompareForm;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\UserHistory\\UserHistory.tsx",["177","178","179","180","181","182","183"],"import { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport { ICompanyData, HistoryResponse } from \"../../types\";\r\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\r\nimport HistoryCall from \"../../App\";\r\nimport UserHistoryCard from \"./userHistoryCard\";\r\n\r\n\r\ninterface UserHistoryProps {\r\n\r\n    userSessionHistoryCompanies: ICompanyData[],\r\n    setHistoryCompanies: React.Dispatch<React.SetStateAction<ICompanyData[]>>\r\n\r\n}\r\n\r\n\r\nconst UserHistory = ({ userSessionHistoryCompanies, setHistoryCompanies }: UserHistoryProps) => {\r\n    let history = userSessionHistoryCompanies;\r\n\r\n    //renders that the user will see when they've provide the data, condition statements make sure the user will be notified when wrong inputs have been made.\r\n    //companyCard has been replaced so the component will only render the userHistory without triggering the PostCallNBB component.\r\n    if (history.length > 0) {\r\n\r\n        return (\r\n            <>\r\n                <UserHistoryCard companyInfo={history} />\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Failed to find any results, please try again using valid VAT numbers!\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UserHistory","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\CompanyCard\\CompanyCard.tsx",["184","185","186","187","188","189","190","191"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Compare from \"../../class/Service/Compare\";\r\nimport { SiteContext } from \"../../context\";\r\nimport { ICompanyData } from \"../../types\";\r\nimport PostCallDB from \"../Compare/PostCallDB\";\r\n\r\ninterface CompanyCardProps {\r\n  companyInfo: ICompanyData[]\r\n// text-danger , text-success \r\n}\r\n\r\n\r\n\r\nconst CompanyCard = ({ companyInfo }: CompanyCardProps) => {\r\n\r\n  return (\r\n      \r\n      <>\r\n      { companyInfo?.map((c: ICompanyData,i:number) => {\r\n\r\n\r\n            return (\r\n              <div className=\"col-md-3  mt-5 ml-5\">\r\n              <Card style={{ width: '100%',minHeight:\"400px\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>{c.name}</Card.Title>\r\n                  <Card.Text>VAT : {c.vat} </Card.Text>\r\n                  <Card.Text>Adress: {c.address}</Card.Text>\r\n                  <Card.Text  >Publishing Date: {c.depositDate}</Card.Text>\r\n                 \r\n                  <Card.Text className={ Compare.Company(companyInfo,\"equitity\").ByIndex(i)?.Compare()} >Equity: {c.equitity} </Card.Text>\r\n                  <Card.Text className={ Compare.Company(companyInfo,\"debt\").ByIndex(i)?.Compare() } >Debts: {c.debt} </Card.Text>\r\n                  <Card.Text className={Compare.Company(companyInfo,\"companyProfit\").ByIndex(i)?.Compare() } >Profit: {c.companyProfit}</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n              </div>\r\n            )\r\n          }\r\n          )\r\n\r\n      }\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default CompanyCard;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Logout\\LogoutButton.tsx",["192","193","194","195","196","197","198","199"],"import { ChangeEventHandler, MouseEventHandler, useReducer, useState } from \"react\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport ILoginUser from \"../../interface/ILoginForm/ILoginUser\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nconst base =    cookie.GetCookies(\"base\");\r\nconst Logout=()=>{\r\n\r\n    const [err,setErr] = useState<boolean>(false);\r\n    const [success,setsuccess] = useState<boolean>(false);\r\n    const [errString,setErrString] = useState<string[]>([]);\r\n\r\n\r\n\r\n      const send :MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n        event.preventDefault()\r\n        console.log()\r\n            fetch(base+\"/api/Auth/loginout\",{\r\n             \r\n                    method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                    mode: 'cors', // no-cors, *cors, same-origin\r\n                   // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached,\r\n                   credentials:\"same-origin\",\r\n                   headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                    \"Access-Control-Allow-Methods\": \"OPTIONS, GET, POST\"\r\n\r\n                  },\r\n                    \r\n            }).then(e=>e.json())\r\n            .then(e => {\r\n                \r\n                console.log(e)\r\n                if(e.hasError || typeof e.errors == \"object\"){\r\n\r\n                    let hold = [];\r\n                    if(typeof e.errors == \"object\"){\r\n                    for (const [key, value] of Object.entries(e.errors)) {\r\n                       hold.push(\"-\"+key+\": \"+value);\r\n                    }                   \r\n                 }else{\r\n                    hold.push(e.error );\r\n                 }\r\n                    \r\n                    setErr(true)\r\n\r\n                    setErrString(hold);\r\n                    \r\n\r\n\r\n                }else{\r\n                    setErr(false)\r\n                }\r\n\r\n                if(!e.hasError && e.errors === undefined){\r\n                    //auth.destroy();\r\n                    cookie.DeleteCookie(\"auth\")\r\n                    cookie.DeleteCookie(\"token\")\r\n                    setsuccess(true)\r\n                    window.location.reload();\r\n                }else{\r\n                    setsuccess(false)\r\n                }\r\n            })\r\n            .catch(err=> console.log(err))\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={send}>Log out</button>\r\n\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Logout;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Compare\\ApiCallNBB.tsx",["200","201","202"],"import { useEffect, useState } from \"react\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport { ICompanyData, IPostCompanyData } from \"../../types\";\r\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\r\nimport PostCallDB from \"./PostCallDB\";\r\n\r\n\r\nconst base =    cookie.GetCookies(\"base\");\r\n\r\n\r\n\r\ninterface APICallNBBProps {\r\n    companyVAT: string[],\r\n    companyInfo: ICompanyData[],\r\n    setCompanyInfo: React.Dispatch<React.SetStateAction<ICompanyData[]>>\r\n}\r\n\r\n\r\nconst ApiCallNBB = ({ companyInfo, companyVAT, setCompanyInfo }: APICallNBBProps) => {\r\n    const [errorState1, setErrorState1] = useState<boolean>(false);\r\n    const [errorState2, setErrorState2] = useState<boolean>(false);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n\r\n    //arranges the post, will be moved to a component of its own.\r\n\r\n    useEffect(() => {\r\n        //for testing purposes please regard changing your localhost port.\r\n        Promise.all([GetCompanyDetails()]);\r\n\r\n\r\n    }, []);\r\n    //response can only be called per method, this is the reason two API call methodes were made.\r\n    //both calls are in a try catch so the app won't crash, user will be notified if the VAT they've used was valid.\r\n\r\n    const GetCompanyDetails = async () => {\r\n\r\n        setLoading(true);\r\n        let dataBucket: ICompanyData[] = [];\r\n        let errorcount = 0;\r\n        for (let i = 0; i < companyVAT.length; i++) {\r\n            try {\r\n                errorcount = errorcount + 1;\r\n                let url = `${base}/nbbapi/${companyVAT[i]}`;\r\n                let response = await fetch(`${url}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'content-type': 'application/json',\r\n                        'Access-Control-Allow-Origin': '*'\r\n                    }\r\n                });\r\n                let data = await response.json();\r\n                insertHistroy(data.finalCompanyData[0])\r\n                dataBucket = [...dataBucket, ...data.finalCompanyData as ICompanyData[]];\r\n            }\r\n\r\n            catch (error) {\r\n                errorState(errorcount);\r\n\r\n            }\r\n        }\r\n        setCompanyInfo(dataBucket);\r\n        setLoading(false);\r\n    }\r\n\r\n    //errorState method determines which exception needs to be triggered.\r\n    const errorState = (count: number) => {\r\n        console.log(count);\r\n\r\n        if (count === 1) {\r\n            setErrorState1(true);\r\n        }\r\n        else if (count === 2) {\r\n            setErrorState2(true);\r\n        }\r\n        else {\r\n            setErrorState1(true);\r\n            setErrorState2(true);\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    /*const GetCompanyDetailsFirst = async () => {\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[0]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n      \r\n      \r\n\r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n           \r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState1(true);\r\n        }\r\n\r\n    }\r\n    const GetCompanyDetailsSecond = async () => {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[1]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n            const hold = data;\r\n            \r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n            PostToHistory(data.finalCompanyData .pop())\r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState2(true);\r\n        }\r\n\r\n    }*/\r\n\r\n    //renders that the user will see when they've provide the data, condition statements make sure the user will be notified when wrong inputs have been made.\r\n\r\n\r\n    const insertHistroy = async (company: ICompanyData)=>{\r\n        setLoading(true);\r\n\r\n        let epost: IPostCompanyData = {\r\n            address: company.address,\r\n            companyProfit: company.companyProfit.toString(),\r\n            debt: company.debt.toString(),\r\n            depositDate: company.depositDate?.toString(),\r\n            equitity: company.equitity.toString(),\r\n            name: company.name,\r\n            vat: company.vat\r\n        }\r\n        console.log(epost)\r\n        if (auth.Auth()) {\r\n\r\n            try {\r\n                const response = await fetch(base+'/api/history/history', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(epost),\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                        \"Access-Control-Allow-Credentials\": \"true\",\r\n                        \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                        \"Access-Control-Allow-Methods\": \"POST\",\r\n                        'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Error! status: ${response.status}`);\r\n                }\r\n                const result = (await response.json());\r\n\r\n                console.log('result is: ', JSON.stringify(result));\r\n\r\n                return result;\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    console.log('error message: ', error.message);\r\n                    return error.message;\r\n                } else {\r\n                    console.log('unexpected error: ', error);\r\n                    return 'An unexpected error occurred';\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n\r\n    if (errorState1 === false && errorState2 === false) {\r\n        return (\r\n            <div className=\"d-flex justify-content-around\">\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n    else if (errorState1 === true && errorState2 === false) {\r\n        return (\r\n            <div >\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Failed to find the first result, please try again with a valid VAT number!\r\n                </div>\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if (errorState1 === false && errorState2 === true) {\r\n        return (\r\n            <div>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Failed to find the second result, please try again with a valid VAT number!\r\n                </div>\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Failed to find any results, please try again using valid VAT numbers!\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ApiCallNBB;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\class\\Service\\Compare.ts",["203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"\r\nimport { ICompanyData } from \"../../types\";\r\n\r\n\r\n\r\n\r\nclass Compare{\r\n\r\n\r\nprivate arrayCompany:ICompanyData[] | undefined;\r\n\r\nprivate fieldOfcompanyObject:string | undefined;\r\n\r\n\r\nprivate input1:number|undefined ;\r\nprivate input2:number|undefined ;\r\n\r\n\r\n\r\nconstructor(getCompaniesArray:ICompanyData[],fieldOfcompanyObject:string){\r\n  this.arrayCompany = getCompaniesArray;\r\n  this.fieldOfcompanyObject = fieldOfcompanyObject;\r\n\r\n}\r\n\r\n\r\n\r\npublic static Company(getCompaniesArray:ICompanyData[],fieldOfcompanyObject:string){\r\n\r\n\r\n  return new Compare(getCompaniesArray,fieldOfcompanyObject);\r\n\r\n}\r\n\r\n  private compareInputsAndReturnColor (input1:number,input2:number):string{\r\n    if( input1 > input2){\r\n        return \"text-success\";\r\n    }\r\n    \r\n    if(input1 == input2){\r\n      return \"\";\r\n\r\n    }else{\r\n      return \"text-danger\";\r\n    }\r\n\r\n    return \"\";\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\npublic ByIndex (index:number):this|null{\r\n  if(this.arrayCompany != undefined && this.arrayCompany != undefined){\r\n            type ObjectKey1 = keyof typeof companyInfo1; \r\n            type ObjectKey2 = keyof typeof companyInfo2;\r\n           const  field = this.fieldOfcompanyObject\r\n      \r\n            let companyInfo1:ICompanyData =  this.arrayCompany[index == 0 ?0:1];\r\n            let companyInfo2:ICompanyData =  this.arrayCompany[index == 0 ?1:0];\r\n            let field1 = field as ObjectKey1;\r\n            let field2 = field as ObjectKey2;\r\n            let wait:string ; \r\n\r\n              if(typeof companyInfo1[field1]  != undefined && typeof companyInfo2[field2]  != undefined ){\r\n                let input1 = companyInfo1[field1] ?? 0 ;\r\n                let input2 = companyInfo2[field2] ?? 0 ;\r\n                this.input1 = +input1;\r\n                this.input2 = +input2;\r\n             \r\n                \r\n\r\n              }\r\n       return this\r\n\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n\r\n\r\n    public Compare():string{\r\n      if(this.input1 != undefined  && this.input2 != undefined  ){\r\n        let input1 = this.input1  ;\r\n        let input2 = this.input2 ;\r\n\r\n        switch(this.fieldOfcompanyObject){\r\n          case \"companyProfit\":\r\n            return this.compareInputsAndReturnColor(+input1, +input2)  ;\r\n          break\r\n          case \"debt\":\r\n            return this.compareInputsAndReturnColor(+input1, +input2)  ;\r\n          break\r\n          case \"equitity\":\r\n            return this.compareInputsAndReturnColor(+input1, +input2)  ;\r\n          break\r\n          case \"depositDate\":\r\n            return this.compareInputsAndReturnColor(+input1, +input2)  ;\r\n          break\r\n          default :\r\n  \r\n            return \"black\"\r\n          break\r\n  \r\n        }\r\n\r\n      }\r\n\r\n      return \"black\"\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Compare;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\UserHistory\\userHistoryCard.tsx",["217","218","219","220","221","222","223","224"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SiteContext } from \"../../context\";\r\nimport { ICompanyData } from \"../../types\";\r\nimport PostCallDB from \"../Compare/PostCallDB\";\r\n\r\ninterface CompanyCardProps {\r\n  companyInfo: ICompanyData[],\r\n\r\n}\r\n\r\nconst userHistoryCard = ({ companyInfo }: CompanyCardProps) => {\r\n  return (\r\n\r\n    <>\r\n      {companyInfo?.map((c: ICompanyData) => {\r\n        return (\r\n          <div className=\"col-md-3  mt-5 ml-5\">\r\n            <Card style={{ width: '100%', minHeight: \"400px\" }}>\r\n              <Card.Body>\r\n                <Card.Title>{c.name}</Card.Title>\r\n                <Card.Text>VAT : {c.vat} </Card.Text>\r\n                <Card.Text>Adress: {c.address}</Card.Text>\r\n                <Card.Text>Publishing Date: {c.depositDate}</Card.Text>\r\n                <Card.Text>Equity: {c.equitity}</Card.Text>\r\n                <Card.Text>Debts: {c.debt}</Card.Text>\r\n                <Card.Text>Profit: {c.companyProfit}</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        )\r\n      }\r\n      )\r\n      }\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default userHistoryCard;","C:\\Users\\Nirma\\data\\ap_2021_2022\\it-project\\ProjectAp2022\\it-project-frontend\\src\\components\\Compare\\PostCallDB.tsx",["225","226"],"import { ICompanyData, IPostCompanyData } from \"../../types\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface PostCallDBProps {\r\n    company: ICompanyData\r\n}\r\n\r\n\r\n\r\n\r\nconst PostCallDB = ({ company }: PostCallDBProps) => {\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n\r\n    useEffect(() => {\r\n        //triggers the PostCall\r\n        setTimeout(() => {\r\n            console.log(\"start\");\r\n\r\n            PostToHistory(company);\r\n            console.log(\"stop\");\r\n\r\n        }, 2000);\r\n    }, []);\r\n//PostToHistory function will map out the CompanyInfo Array, every object prop from CompanyInfo will be asigned to the epost object.\r\n\r\n    const PostToHistory = async (companies: ICompanyData) => {\r\n        setLoading(true);\r\n\r\n        let epost: IPostCompanyData = {\r\n            address: company.address,\r\n            companyProfit: company.companyProfit.toString(),\r\n            debt: company.debt.toString(),\r\n            depositDate: company.depositDate?.toString(),\r\n            equitity: company.equitity.toString(),\r\n            name: company.name,\r\n            vat: company.vat\r\n        }\r\n        console.log(epost)\r\n        if (auth.Auth()) {\r\n            try {\r\n                const response = await fetch('https://localhost:44391/api/history/history', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(epost),\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                        \"Access-Control-Allow-Credentials\": \"true\",\r\n                        \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                        \"Access-Control-Allow-Methods\": \"POST\",\r\n                        'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Error! status: ${response.status}`);\r\n                }\r\n                const result = (await response.json());\r\n\r\n                console.log('result is: ', JSON.stringify(result));\r\n\r\n                return result;\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    console.log('error message: ', error.message);\r\n                    return error.message;\r\n                } else {\r\n                    console.log('unexpected error: ', error);\r\n                    return 'An unexpected error occurred';\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        setLoading(false);\r\n\r\n        /*let epost: IPostCompanyData;\r\n        companies.map(async (e: ICompanyData) => {\r\n            epost = {\r\n                address: e.address,\r\n                companyProfit: e.companyProfit.toString(),\r\n                debt: e.debt.toString(),\r\n                depositDate: e.depositDate?.toString(),\r\n                equitity: e.equitity.toString(),\r\n                name: e.name,\r\n                vat: e.vat\r\n\r\n            }\r\n            console.log(epost)\r\n            if (auth.Auth()) {\r\n                try {\r\n                    const response = await fetch('https://localhost:44391/api/history/history', {\r\n                        method: 'POST',\r\n                        body: JSON.stringify(epost),\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Access-Control-Allow-Credentials\": \"true\",\r\n                            \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                            \"Access-Control-Allow-Methods\": \"POST\",\r\n                            'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\r\n                        },\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error(`Error! status: ${response.status}`);\r\n                    }\r\n                    const result = (await response.json());\r\n\r\n                    console.log('result is: ', JSON.stringify(result));\r\n\r\n                    return result;\r\n                } catch (error) {\r\n                    if (error instanceof Error) {\r\n                        console.log('error message: ', error.message);\r\n                        return error.message;\r\n                    } else {\r\n                        console.log('unexpected error: ', error);\r\n                        return 'An unexpected error occurred';\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n            setLoading(false);\r\n\r\n        })/*\r\n\r\n\r\n        /*let epost: IPostCompanyData = {\r\n            address: e.address,\r\n            companyProfit: e.companyProfit.toString(),\r\n            debt: e.debt.toString(),\r\n            depositDate: e.depositDate?.toString(),\r\n            equitity: e.equitity.toString(),\r\n            name: e.name,\r\n            vat: e.vat\r\n        }\r\n        if (auth.Auth())\r\n\r\n            try {\r\n                const response = await fetch('https://localhost:44391/api/history/history', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(epost),\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                        \"Access-Control-Allow-Credentials\": \"true\",\r\n                        \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                        \"Access-Control-Allow-Methods\": \"POST\",\r\n                        'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Error! status: ${response.status}`);\r\n                }\r\n                const result = (await response.json());\r\n\r\n                console.log('result is: ', JSON.stringify(result));\r\n\r\n                return result;\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    console.log('error message: ', error.message);\r\n                    return error.message;\r\n                } else {\r\n                    console.log('unexpected error: ', error);\r\n                    return 'An unexpected error occurred';\r\n                }\r\n            }\r\n            */\r\n    }\r\n\r\n    return (<div></div>);\r\n}\r\n\r\nexport default PostCallDB;",["227","228"],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":35},{"ruleId":"233","severity":1,"message":"237","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":14},{"ruleId":"233","severity":1,"message":"238","line":12,"column":10,"nodeType":"235","messageId":"236","endLine":12,"endColumn":14},{"ruleId":"233","severity":1,"message":"239","line":21,"column":21,"nodeType":"235","messageId":"236","endLine":21,"endColumn":33},{"ruleId":"240","severity":1,"message":"241","line":77,"column":32,"nodeType":"242","messageId":"243","endLine":77,"endColumn":34},{"ruleId":"244","severity":1,"message":"245","line":102,"column":6,"nodeType":"246","endLine":102,"endColumn":23,"suggestions":"247"},{"ruleId":"233","severity":1,"message":"248","line":104,"column":5,"nodeType":"235","messageId":"236","endLine":104,"endColumn":8},{"ruleId":"249","severity":1,"message":"250","line":8,"column":14,"nodeType":"235","messageId":"251","endLine":8,"endColumn":25},{"ruleId":"233","severity":1,"message":"252","line":1,"column":10,"nodeType":"235","messageId":"236","endLine":1,"endColumn":19},{"ruleId":"233","severity":1,"message":"237","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"233","severity":1,"message":"253","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":12},{"ruleId":"233","severity":1,"message":"254","line":4,"column":24,"nodeType":"235","messageId":"236","endLine":4,"endColumn":39},{"ruleId":"233","severity":1,"message":"255","line":12,"column":21,"nodeType":"235","messageId":"236","endLine":12,"endColumn":31},{"ruleId":"256","severity":1,"message":"257","line":43,"column":67,"nodeType":"258","endLine":43,"endColumn":98},{"ruleId":"233","severity":1,"message":"237","line":1,"column":8,"nodeType":"235","messageId":"236","endLine":1,"endColumn":14},{"ruleId":"233","severity":1,"message":"238","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":12},{"ruleId":"233","severity":1,"message":"259","line":3,"column":17,"nodeType":"235","messageId":"236","endLine":3,"endColumn":27},{"ruleId":"233","severity":1,"message":"252","line":3,"column":29,"nodeType":"235","messageId":"236","endLine":3,"endColumn":38},{"ruleId":"233","severity":1,"message":"260","line":3,"column":40,"nodeType":"235","messageId":"236","endLine":3,"endColumn":48},{"ruleId":"233","severity":1,"message":"234","line":3,"column":50,"nodeType":"235","messageId":"236","endLine":3,"endColumn":68},{"ruleId":"233","severity":1,"message":"261","line":3,"column":70,"nodeType":"235","messageId":"236","endLine":3,"endColumn":87},{"ruleId":"233","severity":1,"message":"262","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":20},{"ruleId":"233","severity":1,"message":"263","line":4,"column":22,"nodeType":"235","messageId":"236","endLine":4,"endColumn":31},{"ruleId":"233","severity":1,"message":"264","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":19},{"ruleId":"233","severity":1,"message":"259","line":1,"column":10,"nodeType":"235","messageId":"236","endLine":1,"endColumn":20},{"ruleId":"233","severity":1,"message":"237","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"233","severity":1,"message":"265","line":2,"column":34,"nodeType":"235","messageId":"236","endLine":2,"endColumn":45},{"ruleId":"233","severity":1,"message":"266","line":7,"column":10,"nodeType":"235","messageId":"236","endLine":7,"endColumn":21},{"ruleId":"267","severity":1,"message":"268","line":17,"column":17,"nodeType":"269","messageId":"243","endLine":17,"endColumn":33},{"ruleId":"240","severity":1,"message":"241","line":54,"column":84,"nodeType":"242","messageId":"243","endLine":54,"endColumn":86},{"ruleId":"240","severity":1,"message":"241","line":63,"column":81,"nodeType":"242","messageId":"243","endLine":63,"endColumn":83},{"ruleId":"233","severity":1,"message":"260","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"270","line":1,"column":49,"nodeType":"235","messageId":"236","endLine":1,"endColumn":59},{"ruleId":"233","severity":1,"message":"271","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"272","line":27,"column":40,"nodeType":"242","messageId":"243","endLine":27,"endColumn":42},{"ruleId":"240","severity":1,"message":"241","line":32,"column":38,"nodeType":"242","messageId":"243","endLine":32,"endColumn":40},{"ruleId":"240","severity":1,"message":"241","line":33,"column":38,"nodeType":"242","messageId":"243","endLine":33,"endColumn":40},{"ruleId":"233","severity":1,"message":"270","line":1,"column":49,"nodeType":"235","messageId":"236","endLine":1,"endColumn":59},{"ruleId":"233","severity":1,"message":"273","line":4,"column":8,"nodeType":"235","messageId":"236","endLine":4,"endColumn":13},{"ruleId":"233","severity":1,"message":"274","line":19,"column":12,"nodeType":"235","messageId":"236","endLine":19,"endColumn":15},{"ruleId":"233","severity":1,"message":"275","line":20,"column":12,"nodeType":"235","messageId":"236","endLine":20,"endColumn":19},{"ruleId":"233","severity":1,"message":"276","line":21,"column":12,"nodeType":"235","messageId":"236","endLine":21,"endColumn":21},{"ruleId":"233","severity":1,"message":"259","line":1,"column":30,"nodeType":"235","messageId":"236","endLine":1,"endColumn":40},{"ruleId":"233","severity":1,"message":"260","line":1,"column":42,"nodeType":"235","messageId":"236","endLine":1,"endColumn":50},{"ruleId":"233","severity":1,"message":"277","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":13},{"ruleId":"233","severity":1,"message":"278","line":3,"column":10,"nodeType":"235","messageId":"236","endLine":3,"endColumn":19},{"ruleId":"233","severity":1,"message":"262","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":20},{"ruleId":"233","severity":1,"message":"266","line":5,"column":10,"nodeType":"235","messageId":"236","endLine":5,"endColumn":21},{"ruleId":"233","severity":1,"message":"253","line":8,"column":8,"nodeType":"235","messageId":"236","endLine":8,"endColumn":12},{"ruleId":"233","severity":1,"message":"259","line":3,"column":17,"nodeType":"235","messageId":"236","endLine":3,"endColumn":27},{"ruleId":"233","severity":1,"message":"252","line":3,"column":29,"nodeType":"235","messageId":"236","endLine":3,"endColumn":38},{"ruleId":"233","severity":1,"message":"260","line":3,"column":40,"nodeType":"235","messageId":"236","endLine":3,"endColumn":48},{"ruleId":"233","severity":1,"message":"262","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":20},{"ruleId":"233","severity":1,"message":"263","line":4,"column":22,"nodeType":"235","messageId":"236","endLine":4,"endColumn":31},{"ruleId":"233","severity":1,"message":"264","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":19},{"ruleId":"233","severity":1,"message":"279","line":35,"column":7,"nodeType":"235","messageId":"236","endLine":35,"endColumn":14},{"ruleId":"233","severity":1,"message":"252","line":1,"column":10,"nodeType":"235","messageId":"236","endLine":1,"endColumn":19},{"ruleId":"233","severity":1,"message":"260","line":1,"column":21,"nodeType":"235","messageId":"236","endLine":1,"endColumn":29},{"ruleId":"233","severity":1,"message":"237","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"233","severity":1,"message":"253","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":12},{"ruleId":"233","severity":1,"message":"254","line":4,"column":24,"nodeType":"235","messageId":"236","endLine":4,"endColumn":39},{"ruleId":"233","severity":1,"message":"264","line":5,"column":8,"nodeType":"235","messageId":"236","endLine":5,"endColumn":19},{"ruleId":"233","severity":1,"message":"280","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":19},{"ruleId":"233","severity":1,"message":"259","line":1,"column":10,"nodeType":"235","messageId":"236","endLine":1,"endColumn":20},{"ruleId":"233","severity":1,"message":"252","line":1,"column":22,"nodeType":"235","messageId":"236","endLine":1,"endColumn":31},{"ruleId":"233","severity":1,"message":"260","line":1,"column":33,"nodeType":"235","messageId":"236","endLine":1,"endColumn":41},{"ruleId":"233","severity":1,"message":"237","line":2,"column":16,"nodeType":"235","messageId":"236","endLine":2,"endColumn":22},{"ruleId":"233","severity":1,"message":"262","line":3,"column":10,"nodeType":"235","messageId":"236","endLine":3,"endColumn":20},{"ruleId":"233","severity":1,"message":"263","line":3,"column":22,"nodeType":"235","messageId":"236","endLine":3,"endColumn":31},{"ruleId":"233","severity":1,"message":"266","line":5,"column":10,"nodeType":"235","messageId":"236","endLine":5,"endColumn":21},{"ruleId":"233","severity":1,"message":"281","line":7,"column":8,"nodeType":"235","messageId":"236","endLine":7,"endColumn":18},{"ruleId":"233","severity":1,"message":"234","line":1,"column":10,"nodeType":"235","messageId":"236","endLine":1,"endColumn":28},{"ruleId":"233","severity":1,"message":"270","line":1,"column":49,"nodeType":"235","messageId":"236","endLine":1,"endColumn":59},{"ruleId":"233","severity":1,"message":"282","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":18},{"ruleId":"233","severity":1,"message":"273","line":4,"column":8,"nodeType":"235","messageId":"236","endLine":4,"endColumn":13},{"ruleId":"233","severity":1,"message":"253","line":5,"column":8,"nodeType":"235","messageId":"236","endLine":5,"endColumn":12},{"ruleId":"233","severity":1,"message":"274","line":9,"column":12,"nodeType":"235","messageId":"236","endLine":9,"endColumn":15},{"ruleId":"233","severity":1,"message":"275","line":10,"column":12,"nodeType":"235","messageId":"236","endLine":10,"endColumn":19},{"ruleId":"233","severity":1,"message":"276","line":11,"column":12,"nodeType":"235","messageId":"236","endLine":11,"endColumn":21},{"ruleId":"233","severity":1,"message":"281","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":18},{"ruleId":"233","severity":1,"message":"283","line":23,"column":12,"nodeType":"235","messageId":"236","endLine":23,"endColumn":19},{"ruleId":"244","severity":1,"message":"284","line":33,"column":8,"nodeType":"246","endLine":33,"endColumn":10,"suggestions":"285"},{"ruleId":"240","severity":1,"message":"241","line":40,"column":15,"nodeType":"242","messageId":"243","endLine":40,"endColumn":17},{"ruleId":"286","severity":1,"message":"287","line":47,"column":5,"nodeType":"288","messageId":"289","endLine":47,"endColumn":15},{"ruleId":"240","severity":1,"message":"272","line":57,"column":24,"nodeType":"242","messageId":"243","endLine":57,"endColumn":26},{"ruleId":"240","severity":1,"message":"272","line":57,"column":58,"nodeType":"242","messageId":"243","endLine":57,"endColumn":60},{"ruleId":"240","severity":1,"message":"241","line":62,"column":70,"nodeType":"242","messageId":"243","endLine":62,"endColumn":72},{"ruleId":"240","severity":1,"message":"241","line":63,"column":70,"nodeType":"242","messageId":"243","endLine":63,"endColumn":72},{"ruleId":"233","severity":1,"message":"290","line":66,"column":17,"nodeType":"235","messageId":"236","endLine":66,"endColumn":28},{"ruleId":"240","severity":1,"message":"272","line":87,"column":22,"nodeType":"242","messageId":"243","endLine":87,"endColumn":24},{"ruleId":"240","severity":1,"message":"272","line":87,"column":51,"nodeType":"242","messageId":"243","endLine":87,"endColumn":53},{"ruleId":"286","severity":1,"message":"287","line":94,"column":11,"nodeType":"291","messageId":"289","endLine":94,"endColumn":16},{"ruleId":"286","severity":1,"message":"287","line":97,"column":11,"nodeType":"291","messageId":"289","endLine":97,"endColumn":16},{"ruleId":"286","severity":1,"message":"287","line":100,"column":11,"nodeType":"291","messageId":"289","endLine":100,"endColumn":16},{"ruleId":"286","severity":1,"message":"287","line":103,"column":11,"nodeType":"291","messageId":"289","endLine":103,"endColumn":16},{"ruleId":"286","severity":1,"message":"287","line":107,"column":11,"nodeType":"291","messageId":"289","endLine":107,"endColumn":16},{"ruleId":"233","severity":1,"message":"259","line":1,"column":10,"nodeType":"235","messageId":"236","endLine":1,"endColumn":20},{"ruleId":"233","severity":1,"message":"252","line":1,"column":22,"nodeType":"235","messageId":"236","endLine":1,"endColumn":31},{"ruleId":"233","severity":1,"message":"260","line":1,"column":33,"nodeType":"235","messageId":"236","endLine":1,"endColumn":41},{"ruleId":"233","severity":1,"message":"237","line":2,"column":16,"nodeType":"235","messageId":"236","endLine":2,"endColumn":22},{"ruleId":"233","severity":1,"message":"262","line":3,"column":10,"nodeType":"235","messageId":"236","endLine":3,"endColumn":20},{"ruleId":"233","severity":1,"message":"263","line":3,"column":22,"nodeType":"235","messageId":"236","endLine":3,"endColumn":31},{"ruleId":"233","severity":1,"message":"266","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":21},{"ruleId":"233","severity":1,"message":"281","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":18},{"ruleId":"233","severity":1,"message":"283","line":14,"column":12,"nodeType":"235","messageId":"236","endLine":14,"endColumn":19},{"ruleId":"244","severity":1,"message":"292","line":26,"column":8,"nodeType":"246","endLine":26,"endColumn":10,"suggestions":"293"},{"ruleId":"229","replacedBy":"294"},{"ruleId":"231","replacedBy":"295"},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"@typescript-eslint/no-unused-vars","'ChangeEventHandler' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Form' is defined but never used.","'setCompanies' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'HistoryCall' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["298"],"'vat' is assigned a value but never used.","@typescript-eslint/no-redeclare","'SiteContext' is already defined.","redeclared","'useEffect' is defined but never used.","'auth' is defined but never used.","'HistoryResponse' is defined but never used.","'setLoading' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useContext' is defined but never used.","'useState' is defined but never used.","'MouseEventHandler' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'CompanyCard' is defined but never used.","'NavDropdown' is defined but never used.","'SiteContext' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'useReducer' is defined but never used.","'type' is defined but never used.","Expected '!==' and instead saw '!='.","'Alert' is defined but never used.","'err' is assigned a value but never used.","'success' is assigned a value but never used.","'errString' is assigned a value but never used.","'Nav' is defined but never used.","'ListGroup' is defined but never used.","'history' is assigned a value but never used.","'HistoryCall' is defined but never used.","'PostCallDB' is defined but never used.","'ILoginUser' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetCompanyDetails'. Either include it or remove the dependency array.",["299"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'wait' is defined but never used.","BreakStatement","React Hook useEffect has missing dependencies: 'PostToHistory' and 'company'. Either include them or remove the dependency array.",["300"],["296"],["297"],"no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [HistoryCall, loading, loggedin, search]",{"range":"307","text":"308"},"Update the dependencies array to be: [GetCompanyDetails]",{"range":"309","text":"310"},"Update the dependencies array to be: [PostToHistory, company]",{"range":"311","text":"312"},[2947,2964],"[HistoryCall, loading, loggedin, search]",[1035,1037],"[GetCompanyDetails]",[610,612],"[PostToHistory, company]"]