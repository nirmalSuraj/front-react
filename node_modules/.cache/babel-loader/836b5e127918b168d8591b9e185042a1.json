{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Nirma/data/ap_2021_2022/it-project/ProjectAp2022/it-project-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Users/Nirma/data/ap_2021_2022/it-project/ProjectAp2022/it-project-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Nirma/data/ap_2021_2022/it-project/ProjectAp2022/it-project-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Nirma\\\\data\\\\ap_2021_2022\\\\it-project\\\\ProjectAp2022\\\\it-project-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useEffect,useState}from\"react\";import auth from\"../../class/Auth/Auth\";import cookie from\"../../class/Cookie/Cookie\";import CompanyCard from\"../CompanyCard/CompanyCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var base=cookie.GetCookies(\"base\");var ApiCallNBB=function ApiCallNBB(_ref){var companyInfo=_ref.companyInfo,companyVAT=_ref.companyVAT,setCompanyInfo=_ref.setCompanyInfo;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),errorState1=_useState2[0],setErrorState1=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),errorState2=_useState4[0],setErrorState2=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];//arranges the post, will be moved to a component of its own.\nuseEffect(function(){//for testing purposes please regard changing your localhost port.\nPromise.all([GetCompanyDetails()]);},[]);//response can only be called per method, this is the reason two API call methodes were made.\n//both calls are in a try catch so the app won't crash, user will be notified if the VAT they've used was valid.\nvar GetCompanyDetails=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var dataBucket,errorcount,i,url,response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);dataBucket=[];errorcount=0;i=0;case 4:if(!(i<companyVAT.length)){_context.next=24;break;}_context.prev=5;errorcount=errorcount+1;url=\"\".concat(base,\"/nbbapi/\").concat(companyVAT[i]);_context.next=10;return fetch(\"\".concat(url),{method:'GET',headers:{'content-type':'application/json','Access-Control-Allow-Origin':'*'}});case 10:response=_context.sent;_context.next=13;return response.json();case 13:data=_context.sent;insertHistroy(data.finalCompanyData[0]);dataBucket=[].concat(_toConsumableArray(dataBucket),_toConsumableArray(data.finalCompanyData));_context.next=21;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](5);errorState(errorcount);case 21:i++;_context.next=4;break;case 24:setCompanyInfo(dataBucket);setLoading(false);case 26:case\"end\":return _context.stop();}}},_callee,null,[[5,18]]);}));return function GetCompanyDetails(){return _ref2.apply(this,arguments);};}();//errorState method determines which exception needs to be triggered.\nvar errorState=function errorState(count){console.log(count);if(count===1){setErrorState1(true);}else if(count===2){setErrorState2(true);}else{setErrorState1(true);setErrorState2(true);}};/*const GetCompanyDetailsFirst = async () => {\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[0]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n      \r\n      \r\n\r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n           \r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState1(true);\r\n        }\r\n\r\n    }\r\n    const GetCompanyDetailsSecond = async () => {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[1]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n            const hold = data;\r\n            \r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n            PostToHistory(data.finalCompanyData .pop())\r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState2(true);\r\n        }\r\n\r\n    }*/ //renders that the user will see when they've provide the data, condition statements make sure the user will be notified when wrong inputs have been made.\nvar insertHistroy=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(company){var _company$depositDate;var epost,response,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading(true);epost={address:company.address,companyProfit:company.companyProfit.toString(),debt:company.debt.toString(),depositDate:(_company$depositDate=company.depositDate)===null||_company$depositDate===void 0?void 0:_company$depositDate.toString(),equitity:company.equitity.toString(),name:company.name,vat:company.vat};console.log(epost);if(!auth.Auth()){_context2.next=26;break;}_context2.prev=4;_context2.next=7;return fetch(base+'/api/history/history',{method:'POST',body:JSON.stringify(epost),headers:{'Content-Type':'application/json',\"Access-Control-Allow-Origin\":\"*\",\"Access-Control-Allow-Credentials\":\"true\",\"Access-Control-Allow-Headers\":\"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\"Access-Control-Allow-Methods\":\"POST\",'Authorization':\"Bearer \".concat(cookie.GetCookies(\"token\"))}});case 7:response=_context2.sent;if(response.ok){_context2.next=10;break;}throw new Error(\"Error! status: \".concat(response.status));case 10:_context2.next=12;return response.json();case 12:result=_context2.sent;console.log('result is: ',JSON.stringify(result));return _context2.abrupt(\"return\",result);case 17:_context2.prev=17;_context2.t0=_context2[\"catch\"](4);if(!(_context2.t0 instanceof Error)){_context2.next=24;break;}console.log('error message: ',_context2.t0.message);return _context2.abrupt(\"return\",_context2.t0.message);case 24:console.log('unexpected error: ',_context2.t0);return _context2.abrupt(\"return\",'An unexpected error occurred');case 26:setLoading(false);case 27:case\"end\":return _context2.stop();}}},_callee2,null,[[4,17]]);}));return function insertHistroy(_x){return _ref3.apply(this,arguments);};}();if(errorState1===false&&errorState2===false){return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-around\",children:/*#__PURE__*/_jsx(CompanyCard,{companyInfo:companyInfo})});}else if(errorState1===true&&errorState2===false){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",role:\"alert\",children:\"Failed to find the first result, please try again with a valid VAT number!\"}),/*#__PURE__*/_jsx(CompanyCard,{companyInfo:companyInfo})]});}else if(errorState1===false&&errorState2===true){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",role:\"alert\",children:\"Failed to find the second result, please try again with a valid VAT number!\"}),/*#__PURE__*/_jsx(CompanyCard,{companyInfo:companyInfo})]});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",role:\"alert\",children:\"Failed to find any results, please try again using valid VAT numbers!\"});}};export default ApiCallNBB;","map":{"version":3,"names":["useEffect","useState","auth","cookie","CompanyCard","base","GetCookies","ApiCallNBB","companyInfo","companyVAT","setCompanyInfo","errorState1","setErrorState1","errorState2","setErrorState2","loading","setLoading","Promise","all","GetCompanyDetails","dataBucket","errorcount","i","length","url","fetch","method","headers","response","json","data","insertHistroy","finalCompanyData","errorState","count","console","log","company","epost","address","companyProfit","toString","debt","depositDate","equitity","name","vat","Auth","body","JSON","stringify","ok","Error","status","result","message"],"sources":["C:/Users/Nirma/data/ap_2021_2022/it-project/ProjectAp2022/it-project-frontend/src/components/Compare/ApiCallNBB.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\nimport { ICompanyData, IPostCompanyData } from \"../../types\";\r\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\r\nimport PostCallDB from \"./PostCallDB\";\r\n\r\n\r\nconst base =    cookie.GetCookies(\"base\");\r\n\r\n\r\n\r\ninterface APICallNBBProps {\r\n    companyVAT: string[],\r\n    companyInfo: ICompanyData[],\r\n    setCompanyInfo: React.Dispatch<React.SetStateAction<ICompanyData[]>>\r\n}\r\n\r\n\r\nconst ApiCallNBB = ({ companyInfo, companyVAT, setCompanyInfo }: APICallNBBProps) => {\r\n    const [errorState1, setErrorState1] = useState<boolean>(false);\r\n    const [errorState2, setErrorState2] = useState<boolean>(false);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n\r\n    //arranges the post, will be moved to a component of its own.\r\n\r\n    useEffect(() => {\r\n        //for testing purposes please regard changing your localhost port.\r\n        Promise.all([GetCompanyDetails()]);\r\n\r\n\r\n    }, []);\r\n    //response can only be called per method, this is the reason two API call methodes were made.\r\n    //both calls are in a try catch so the app won't crash, user will be notified if the VAT they've used was valid.\r\n\r\n    const GetCompanyDetails = async () => {\r\n\r\n        setLoading(true);\r\n        let dataBucket: ICompanyData[] = [];\r\n        let errorcount = 0;\r\n        for (let i = 0; i < companyVAT.length; i++) {\r\n            try {\r\n                errorcount = errorcount + 1;\r\n                let url = `${base}/nbbapi/${companyVAT[i]}`;\r\n                let response = await fetch(`${url}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'content-type': 'application/json',\r\n                        'Access-Control-Allow-Origin': '*'\r\n                    }\r\n                });\r\n                let data = await response.json();\r\n                insertHistroy(data.finalCompanyData[0])\r\n                dataBucket = [...dataBucket, ...data.finalCompanyData as ICompanyData[]];\r\n            }\r\n\r\n            catch (error) {\r\n                errorState(errorcount);\r\n\r\n            }\r\n        }\r\n        setCompanyInfo(dataBucket);\r\n        setLoading(false);\r\n    }\r\n\r\n    //errorState method determines which exception needs to be triggered.\r\n    const errorState = (count: number) => {\r\n        console.log(count);\r\n\r\n        if (count === 1) {\r\n            setErrorState1(true);\r\n        }\r\n        else if (count === 2) {\r\n            setErrorState2(true);\r\n        }\r\n        else {\r\n            setErrorState1(true);\r\n            setErrorState2(true);\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    /*const GetCompanyDetailsFirst = async () => {\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[0]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n      \r\n      \r\n\r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n           \r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState1(true);\r\n        }\r\n\r\n    }\r\n    const GetCompanyDetailsSecond = async () => {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[1]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n            const hold = data;\r\n            \r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n            PostToHistory(data.finalCompanyData .pop())\r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState2(true);\r\n        }\r\n\r\n    }*/\r\n\r\n    //renders that the user will see when they've provide the data, condition statements make sure the user will be notified when wrong inputs have been made.\r\n\r\n\r\n    const insertHistroy = async (company: ICompanyData)=>{\r\n        setLoading(true);\r\n\r\n        let epost: IPostCompanyData = {\r\n            address: company.address,\r\n            companyProfit: company.companyProfit.toString(),\r\n            debt: company.debt.toString(),\r\n            depositDate: company.depositDate?.toString(),\r\n            equitity: company.equitity.toString(),\r\n            name: company.name,\r\n            vat: company.vat\r\n        }\r\n        console.log(epost)\r\n        if (auth.Auth()) {\r\n\r\n            try {\r\n                const response = await fetch(base+'/api/history/history', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(epost),\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                        \"Access-Control-Allow-Credentials\": \"true\",\r\n                        \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                        \"Access-Control-Allow-Methods\": \"POST\",\r\n                        'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Error! status: ${response.status}`);\r\n                }\r\n                const result = (await response.json());\r\n\r\n                console.log('result is: ', JSON.stringify(result));\r\n\r\n                return result;\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    console.log('error message: ', error.message);\r\n                    return error.message;\r\n                } else {\r\n                    console.log('unexpected error: ', error);\r\n                    return 'An unexpected error occurred';\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n\r\n    if (errorState1 === false && errorState2 === false) {\r\n        return (\r\n            <div className=\"d-flex justify-content-around\">\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n    else if (errorState1 === true && errorState2 === false) {\r\n        return (\r\n            <div >\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Failed to find the first result, please try again with a valid VAT number!\r\n                </div>\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if (errorState1 === false && errorState2 === true) {\r\n        return (\r\n            <div>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Failed to find the second result, please try again with a valid VAT number!\r\n                </div>\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Failed to find any results, please try again using valid VAT numbers!\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ApiCallNBB;"],"mappings":"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"},"metadata":{},"sourceType":"module"}