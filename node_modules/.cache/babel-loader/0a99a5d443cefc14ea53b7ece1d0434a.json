{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nirma\\\\data\\\\ap_2021_2022\\\\it-project\\\\ProjectAp2022\\\\it-project-frontend\\\\src\\\\components\\\\Login\\\\LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    Email: \"\",\n    Password: \"\"\n  });\n  const [err, setErr] = useState(false);\n  const [success, setsuccess] = useState(false);\n  const [errString, setErrString] = useState([]);\n\n  const handleChange = event => {\n    // console.log(event.target.id);\n    // this will dynamically select key position of the js object\n    let userHold = {\n      Email: \"\",\n      Password: \"\"\n    }; // hold old values                            \n\n    for (const [key, value] of Object.entries(user)) {\n      const p = key;\n      userHold[p] = value;\n    }\n\n    const x = event.target.id;\n    userHold[x] = event.target.value;\n    setUser(userHold);\n  };\n\n  const send = event => {\n    event.preventDefault();\n    console.log(user);\n    fetch(\"https://localhost:44391/api/login\", {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": \"true\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\n        \"Access-Control-Allow-Methods\": \"OPTIONS, GET, POST\"\n      },\n      body: JSON.stringify(user)\n    }).then(e => e.json()).then(e => {\n      console.log(8);\n      console.log(e);\n\n      if (e.hasError || typeof e.errors == \"object\") {\n        let hold = [];\n\n        if (typeof e.errors == \"object\") {\n          for (const [key, value] of Object.entries(e.errors)) {\n            hold.push(\"-\" + key + \": \" + value);\n          }\n        } else {\n          hold.push(e.error);\n        }\n\n        setErr(true);\n        setErrString(hold);\n      } else {\n        setErr(false);\n      }\n\n      if (!e.hasError && e.errors === undefined) {\n        setsuccess(true);\n      } else {\n        setsuccess(false);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 col-sm-12 offset-md-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputEmail1\",\n              className: \"form-label\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              id: \"Email\",\n              \"aria-describedby\": \"emailHelp\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"examplePasssword1\",\n              className: \"form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"Password\",\n              \"aria-describedby\": \"emailHelp\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            onClick: send,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 20\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"tiHkjZp3Bd0q0O+ETp48K2XgOt8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Nirma/data/ap_2021_2022/it-project/ProjectAp2022/it-project-frontend/src/components/Login/LoginForm.tsx"],"names":["useState","Login","user","setUser","Email","Password","err","setErr","success","setsuccess","errString","setErrString","handleChange","event","userHold","key","value","Object","entries","p","x","target","id","send","preventDefault","console","log","fetch","method","mode","headers","body","JSON","stringify","then","e","json","hasError","errors","hold","push","error","undefined","catch"],"mappings":"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","sourcesContent":["import { ChangeEventHandler, MouseEventHandler, useReducer, useState } from \"react\";\r\nimport ILoginUser from \"../../interface/ILoginForm/ILoginUser\";\r\nimport Alert from \"../Alert/Alert\";\r\n\r\nconst Login=()=>{\r\n\r\n    \r\n    const [user, setUser] = useState<ILoginUser>({\r\n        Email:  \"\",\r\n        Password:  \"\",\r\n    });\r\n\r\n    const [err,setErr] = useState<boolean>(false);\r\n    const [success,setsuccess] = useState<boolean>(false);\r\n    const [errString,setErrString] = useState<string[]>([]);\r\n\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n       // console.log(event.target.id);\r\n       type ObjectKey = keyof typeof userHold; // this will dynamically select key position of the js object\r\n        let userHold:ILoginUser = {  Email:  \"\",\r\n                                        Password: \"\"\r\n                                    };\r\n\r\n         // hold old values                            \r\n        for (const [key, value] of Object.entries(user)) {\r\n            const  p  = key as ObjectKey\r\n            userHold[p] = value;\r\n        }                    \r\n        \r\n        const  x  = event.target.id as ObjectKey\r\n        userHold[x] = event.target.value;\r\n    \r\n        setUser(userHold);\r\n                            \r\n      }\r\n\r\n      const send :MouseEventHandler<HTMLButtonElement> = (event)=>{\r\n        event.preventDefault()\r\n        console.log(user)\r\n            fetch(\"https://localhost:44391/api/login\",{\r\n             \r\n                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                    mode: 'cors', // no-cors, *cors, same-origin\r\n                   // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                   headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Access-Control-Allow-Credentials\": \"true\",\r\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                    \"Access-Control-Allow-Methods\": \"OPTIONS, GET, POST\"\r\n\r\n                  },\r\n                    body: JSON.stringify(user)\r\n                    \r\n            }).then(e=>e.json())\r\n            .then(e => {\r\n                console.log(8)\r\n                console.log(e)\r\n                if(e.hasError || typeof e.errors == \"object\"){\r\n\r\n                    let hold = [];\r\n                    if(typeof e.errors == \"object\"){\r\n                    for (const [key, value] of Object.entries(e.errors)) {\r\n                       hold.push(\"-\"+key+\": \"+value);\r\n                    }                   \r\n                 }else{\r\n                    hold.push(e.error );\r\n                 }\r\n                    \r\n                    setErr(true)\r\n                    setErrString(hold);\r\n                    \r\n\r\n\r\n                }else{\r\n                    setErr(false)\r\n                }\r\n\r\n                if(!e.hasError && e.errors === undefined){\r\n                    \r\n                    setsuccess(true)\r\n                }else{\r\n                    setsuccess(false)\r\n                }\r\n            })\r\n            .catch(err=> console.log(err))\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <>\r\n                   <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6 col-sm-12 offset-md-3\">\r\n                        <form action=\"\">\r\n                    \r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"Email\" aria-describedby=\"emailHelp\" onChange={handleChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"examplePasssword1\" className=\"form-label\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"Password\" aria-describedby=\"emailHelp\" onChange={handleChange} />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={send}>Log In</button>\r\n                       \r\n                     \r\n                            \r\n                        </form>\r\n                      \r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}