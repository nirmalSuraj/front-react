{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nirma\\\\data\\\\ap_2021_2022\\\\it-project\\\\ProjectAp2022\\\\it-project-frontend\\\\src\\\\components\\\\Compare\\\\ApiCallNBB.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\nimport auth from \"../../class/Auth/Auth\";\nimport cookie from \"../../class/Cookie/Cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ApiCallNBB = _ref => {\n  _s();\n\n  let {\n    companyInfo,\n    vatInput,\n    setCompanyInfo\n  } = _ref;\n  const [errorState1, setErrorState1] = useState(false);\n  const [errorState2, setErrorState2] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  async function PostToHistory(e) {\n    let epost = {\n      address: e.address,\n      companyProfit: e.companyProfit,\n      debt: e.debt,\n      depositDate: e.depositDate,\n      equitity: e.equitity,\n      name: e.name,\n      vat: e.vat\n    };\n    console.log(epost);\n    if (auth.Auth()) try {\n      const response = await fetch('https://localhost:44391/api/history/history', {\n        method: 'POST',\n        body: JSON.stringify(epost),\n        headers: {\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Credentials\": \"true\",\n          \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\n          \"Access-Control-Allow-Methods\": \"POST\",\n          'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('result is: ', JSON.stringify(result));\n      return result;\n    } catch (error) {\n      if (error instanceof Error) {\n        console.log('error message: ', error.message);\n        return error.message;\n      } else {\n        console.log('unexpected error: ', error);\n        return 'An unexpected error occurred';\n      }\n    }\n  }\n\n  useEffect(() => {\n    //for testing purposes please regard changing your localhost port.\n    GetCompanyDetailsFirst();\n    GetCompanyDetailsSecond();\n  }, []); //response can only be called per method, this is the reason two API call methodes were made.\n  //both calls are in a try catch so the app won't crash, user will be notified if the VAT they've used was valid.\n\n  const GetCompanyDetailsFirst = async () => {\n    try {\n      setLoading(true);\n      let url = `https://localhost:44391/nbbapi/${vatInput[0]}`;\n      let response = await fetch(`${url}`, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      let data = await response.json();\n      console.log(data.finalCompanyData[0]);\n      PostToHistory(data.finalCompanyData[0]);\n      setCompanyInfo(data.finalCompanyData);\n      setLoading(false);\n    } catch (error) {\n      setErrorState1(true);\n    }\n  };\n\n  const GetCompanyDetailsSecond = async () => {\n    try {\n      setLoading(true);\n      let url = `https://localhost:44391/nbbapi/${vatInput[1]}`;\n      let response = await fetch(`${url}`, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      let data = await response.json();\n      console.log(data.finalCompanyData[1]);\n      PostToHistory(data.finalCompanyData);\n      setCompanyInfo(data.finalCompanyData);\n      setLoading(false);\n    } catch (error) {\n      setErrorState2(true);\n    }\n  }; //renders that the user will see when they've provide the data, condition statements make sure the user will be notified when wrong inputs have been made.\n\n\n  if (errorState1 === false && errorState2 === false) {\n    return /*#__PURE__*/_jsxDEV(CompanyCard, {\n      companyInfo: companyInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  } else if (errorState1 === true && errorState2 === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: \"Failed to find the first result, please try again with a valid VAT number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CompanyCard, {\n        companyInfo: companyInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  } else if (errorState1 === false && errorState2 === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: \"Failed to find the second result, please try again with a valid VAT number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CompanyCard, {\n        companyInfo: companyInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Failed to find any results, please try again using valid VAT numbers!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(ApiCallNBB, \"x0pnD5acpDmGEmkfuwj7RSJAbwc=\");\n\n_c = ApiCallNBB;\nexport default ApiCallNBB;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiCallNBB\");","map":{"version":3,"sources":["C:/Users/Nirma/data/ap_2021_2022/it-project/ProjectAp2022/it-project-frontend/src/components/Compare/ApiCallNBB.tsx"],"names":["useEffect","useState","CompanyCard","auth","cookie","ApiCallNBB","companyInfo","vatInput","setCompanyInfo","errorState1","setErrorState1","errorState2","setErrorState2","loading","setLoading","PostToHistory","e","epost","address","companyProfit","debt","depositDate","equitity","name","vat","console","log","Auth","response","fetch","method","body","JSON","stringify","headers","GetCookies","ok","Error","status","result","json","error","message","GetCompanyDetailsFirst","GetCompanyDetailsSecond","url","data","finalCompanyData"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { ICompanyData, IPostCompanyData } from \"../../types\";\r\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\n\r\n\r\ninterface APICallNBBProps {\r\n    vatInput: string[],\r\n    companyInfo: ICompanyData[],\r\n    setCompanyInfo: React.Dispatch<React.SetStateAction<ICompanyData[]>>\r\n}\r\n\r\n\r\nconst ApiCallNBB = ({ companyInfo, vatInput, setCompanyInfo }: APICallNBBProps) => {\r\n    const [errorState1, setErrorState1] = useState<boolean>(false);\r\n    const [errorState2, setErrorState2] = useState<boolean>(false);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n    async function PostToHistory(e : ICompanyData) {\r\n\r\n \r\n        let epost : IPostCompanyData = {\r\n        address : e.address,\r\n        companyProfit : e.companyProfit,\r\n        debt : e.debt,\r\n        depositDate : e.depositDate,\r\n        equitity : e.equitity,\r\n        name : e.name,\r\n        vat : e.vat }\r\n        console.log(epost)\r\n        if (auth.Auth()) \r\n     \r\n        try {\r\n          const response = await fetch('https://localhost:44391/api/history/history', {\r\n            method: 'POST',\r\n            body: JSON.stringify(epost),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Credentials\": \"true\",\r\n                \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                \"Access-Control-Allow-Methods\": \"POST\",\r\n                'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\r\n            },\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error(`Error! status: ${response.status}`);\r\n          }\r\n          const result = (await response.json());\r\n      \r\n          console.log('result is: ', JSON.stringify(result));\r\n      \r\n          return result;\r\n        } catch (error) {\r\n          if (error instanceof Error) {\r\n            console.log('error message: ', error.message);\r\n            return error.message;\r\n          } else {\r\n            console.log('unexpected error: ', error);\r\n            return 'An unexpected error occurred';\r\n          }\r\n        }\r\n      }\r\n    useEffect(() => {\r\n        //for testing purposes please regard changing your localhost port.\r\n        GetCompanyDetailsFirst();\r\n        GetCompanyDetailsSecond();\r\n    }, []);\r\n    //response can only be called per method, this is the reason two API call methodes were made.\r\n    //both calls are in a try catch so the app won't crash, user will be notified if the VAT they've used was valid.\r\n    const GetCompanyDetailsFirst = async () => {\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[0]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n            console.log(data.finalCompanyData[0]);\r\n            PostToHistory(data.finalCompanyData[0])\r\n\r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n            \r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState1(true);\r\n        }\r\n\r\n    }\r\n    const GetCompanyDetailsSecond = async () => {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[1]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n            console.log(data.finalCompanyData[1]);\r\n            PostToHistory(data.finalCompanyData)\r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState2(true);\r\n        }\r\n\r\n    }\r\n\r\n//renders that the user will see when they've provide the data, condition statements make sure the user will be notified when wrong inputs have been made.\r\n    if (errorState1 === false && errorState2 === false) {\r\n        return (\r\n            <CompanyCard companyInfo={companyInfo} />\r\n        )\r\n    }\r\n    else if (errorState1 === true && errorState2 === false) {\r\n        return (\r\n            <div>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Failed to find the first result, please try again with a valid VAT number!\r\n                </div>\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if (errorState1 === false && errorState2 === true) {\r\n        return (\r\n            <div>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Failed to find the second result, please try again with a valid VAT number!\r\n                </div>\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Failed to find any results, please try again using valid VAT numbers!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ApiCallNBB;"]},"metadata":{},"sourceType":"module"}