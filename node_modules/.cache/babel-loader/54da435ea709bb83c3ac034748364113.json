{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nirma\\\\data\\\\ap_2021_2022\\\\it-project\\\\ProjectAp2022\\\\it-project-frontend\\\\src\\\\components\\\\UserHistory\\\\UserHistory.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport auth from \"../../class/Auth/Auth\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserHistory = () => {\n  _s();\n\n  const check = auth.Auth();\n  const [historyCompanyArray, setCompanyArray] = useState();\n  ;\n  const [loading, setLoading] = useState(false);\n  const [request, setRequest] = useState(false);\n  const [lastrequest, setlastRequest] = useState();\n\n  const getCompanyDetails = async () => {\n    setLoading(true);\n    let options = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    };\n    let ResponseJSON = await fetch(`https://localhost:44385/api/history/history/all`, options).then(response => response.json()).then(json => {\n      setLoading(false);\n      setRequest(true);\n      return json;\n    }).catch(error => console.log(error));\n    let setHistoryResponse = ResponseJSON;\n    let historyCompanyArray = setHistoryResponse.sendObj.history.length;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex d-flex mt-2\",\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserHistory, \"eTbeEmqw+w98aZkX+QfjDSZJN38=\");\n\n_c = UserHistory;\nexport default UserHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserHistory\");","map":{"version":3,"sources":["C:/Users/Nirma/data/ap_2021_2022/it-project/ProjectAp2022/it-project-frontend/src/components/UserHistory/UserHistory.tsx"],"names":["useState","auth","UserHistory","check","Auth","historyCompanyArray","setCompanyArray","loading","setLoading","request","setRequest","lastrequest","setlastRequest","getCompanyDetails","options","method","headers","Accept","ResponseJSON","fetch","then","response","json","catch","error","console","log","setHistoryResponse","sendObj","history","length"],"mappings":";;;AACA,SAAqBA,QAArB,QAAqC,OAArC;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;;;;AAQA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAMC,KAAa,GAAGF,IAAI,CAACG,IAAL,EAAtB;AAEF,QAAM,CAACC,mBAAD,EAAsBC,eAAtB,IAAyCN,QAAQ,EAAvD;AAAiF;AACjF,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAyBV,QAAQ,CAAU,KAAV,CAAvC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAiCZ,QAAQ,EAA/C;;AAEA,QAAMa,iBAAiB,GAAG,YAAY;AACpCL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIM,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFG,KAAd;AAMA,QAAIC,YAA6B,GAAG,MAAMC,KAAK,CAC5C,iDAD4C,EAE7CL,OAF6C,CAAL,CAIvCM,IAJuC,CAIjCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJoB,EAKvCF,IALuC,CAKjCE,IAAD,IAAU;AACdd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,aAAOY,IAAP;AACD,KATuC,EAUvCC,KAVuC,CAUhCC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAVsB,CAA1C;AAWC,QAAIG,kBAAkB,GAAIT,YAA1B;AAEA,QAAIb,mBAAmB,GAAGsB,kBAAkB,CAACC,OAAnB,CAA2BC,OAA3B,CAAmCC,MAA7D;AACD,GAtBF;;AA0BE,sBACA;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cAGEvB,OAAO,gBAAG,qCAAH,gBAIH;AAPN;AAAA;AAAA;AAAA;AAAA,UADA;AAcH,CAjDD;;GAAML,W;;KAAAA,W;AAmDF,eAAeA,WAAf","sourcesContent":["import { format } from \"path\";\r\nimport { useContext, useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport {ICompanyData, HistoryResponse} from \"../../types\";\r\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\r\n\r\ninterface UserHistoryProps {\r\n    \r\n}\r\n\r\nconst UserHistory = () => {\r\n\r\n    const check:boolean = auth.Auth();\r\n\r\n  const [historyCompanyArray, setCompanyArray] = useState<ICompanyData[] | void>();;\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [request, setRequest] =  useState<boolean>(false);\r\n  const [lastrequest, setlastRequest] =  useState<number>();\r\n\r\n  const getCompanyDetails = async () => {\r\n    setLoading(true);\r\n    let options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    let ResponseJSON :HistoryResponse = await fetch(\r\n      `https://localhost:44385/api/history/history/all`,\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setLoading(false);\r\n        setRequest(true);\r\n        return json;\r\n      })\r\n      .catch((error) => console.log(error));\r\n     let setHistoryResponse = (ResponseJSON);\r\n\r\n     let historyCompanyArray = setHistoryResponse.sendObj.history.length;\r\n   }\r\n\r\n   \r\n\r\n    return (\r\n    <div className='flex d-flex mt-2'>\r\n\r\n    {\r\n      loading ? <>\r\n      {/*historyCompanyArray?.map((item) => \r\n            <CompanyCard CompanyInput={item}></CompanyCard>)\r\n    */}\r\n      </>:<>\r\n        \r\n      </>\r\n    }\r\n    </div>\r\n    )\r\n}\r\n\r\n    export default UserHistory"]},"metadata":{},"sourceType":"module"}