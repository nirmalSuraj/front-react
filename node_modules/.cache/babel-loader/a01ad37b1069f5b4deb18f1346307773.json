{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nirma\\\\data\\\\ap_2021_2022\\\\it-project\\\\ProjectAp2022\\\\it-project-frontend\\\\src\\\\components\\\\Compare\\\\ApiCallNBB.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\nimport auth from \"../../class/Auth/Auth\";\nimport cookie from \"../../class/Cookie/Cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ApiCallNBB = _ref => {\n  _s();\n\n  let {\n    companyInfo,\n    vatInput,\n    setCompanyInfo\n  } = _ref;\n  const [errorState1, setErrorState1] = useState(false);\n  const [errorState2, setErrorState2] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  async function PostToHistory(e) {\n    var _e$depositDate;\n\n    let epost = {\n      address: e.address,\n      companyProfit: e.companyProfit.toString(),\n      debt: e.debt.toString(),\n      depositDate: (_e$depositDate = e.depositDate) === null || _e$depositDate === void 0 ? void 0 : _e$depositDate.toString(),\n      equitity: e.equitity.toString(),\n      name: e.name,\n      vat: e.vat\n    };\n    console.log(epost);\n    if (auth.Auth()) try {\n      const response = await fetch('https://localhost:44391/api/history/history', {\n        method: 'POST',\n        body: JSON.stringify(epost),\n        headers: {\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Credentials\": \"true\",\n          \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\n          \"Access-Control-Allow-Methods\": \"POST\",\n          'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('result is: ', JSON.stringify(result));\n      return result;\n    } catch (error) {\n      if (error instanceof Error) {\n        console.log('error message: ', error.message);\n        return error.message;\n      } else {\n        console.log('unexpected error: ', error);\n        return 'An unexpected error occurred';\n      }\n    }\n  }\n\n  useEffect(() => {\n    //for testing purposes please regard changing your localhost port.\n    GetCompanyDetailsFirst();\n    GetCompanyDetailsSecond();\n  }, []); //response can only be called per method, this is the reason two API call methodes were made.\n  //both calls are in a try catch so the app won't crash, user will be notified if the VAT they've used was valid.\n\n  const GetCompanyDetailsFirst = async () => {\n    try {\n      setLoading(true);\n      let url = `https://localhost:44391/nbbapi/${vatInput[0]}`;\n      let response = await fetch(`${url}`, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      let data = await response.json();\n      setCompanyInfo(data.finalCompanyData);\n      PostToHistory(data.finalCompanyData.pop());\n      setLoading(false);\n    } catch (error) {\n      setErrorState1(true);\n    }\n  };\n\n  const GetCompanyDetailsSecond = async () => {\n    try {\n      setLoading(true);\n      let url = `https://localhost:44391/nbbapi/${vatInput[1]}`;\n      let response = await fetch(`${url}`, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      let data = await response.json();\n      const hold = data;\n      setCompanyInfo(data.finalCompanyData);\n      PostToHistory(data.finalCompanyData.pop());\n      setLoading(false);\n    } catch (error) {\n      setErrorState2(true);\n    }\n  }; //renders that the user will see when they've provide the data, condition statements make sure the user will be notified when wrong inputs have been made.\n\n\n  if (errorState1 === false && errorState2 === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-around\",\n      children: /*#__PURE__*/_jsxDEV(CompanyCard, {\n        companyInfo: companyInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  } else if (errorState1 === true && errorState2 === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: \"Failed to find the first result, please try again with a valid VAT number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CompanyCard, {\n        companyInfo: companyInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  } else if (errorState1 === false && errorState2 === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: \"Failed to find the second result, please try again with a valid VAT number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CompanyCard, {\n        companyInfo: companyInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Failed to find any results, please try again using valid VAT numbers!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(ApiCallNBB, \"x0pnD5acpDmGEmkfuwj7RSJAbwc=\");\n\n_c = ApiCallNBB;\nexport default ApiCallNBB;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiCallNBB\");","map":{"version":3,"names":["useEffect","useState","CompanyCard","auth","cookie","ApiCallNBB","companyInfo","vatInput","setCompanyInfo","errorState1","setErrorState1","errorState2","setErrorState2","loading","setLoading","PostToHistory","e","epost","address","companyProfit","toString","debt","depositDate","equitity","name","vat","console","log","Auth","response","fetch","method","body","JSON","stringify","headers","GetCookies","ok","Error","status","result","json","error","message","GetCompanyDetailsFirst","GetCompanyDetailsSecond","url","data","finalCompanyData","pop","hold"],"sources":["C:/Users/Nirma/data/ap_2021_2022/it-project/ProjectAp2022/it-project-frontend/src/components/Compare/ApiCallNBB.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { ICompanyData, IPostCompanyData } from \"../../types\";\r\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\r\nimport auth from \"../../class/Auth/Auth\";\r\nimport cookie from \"../../class/Cookie/Cookie\";\r\n\r\n\r\ninterface APICallNBBProps {\r\n    vatInput: string[],\r\n    companyInfo: ICompanyData[],\r\n    setCompanyInfo: React.Dispatch<React.SetStateAction<ICompanyData[]>>\r\n}\r\n\r\n\r\nconst ApiCallNBB = ({ companyInfo, vatInput, setCompanyInfo }: APICallNBBProps) => {\r\n    const [errorState1, setErrorState1] = useState<boolean>(false);\r\n    const [errorState2, setErrorState2] = useState<boolean>(false);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n    async function PostToHistory(e : ICompanyData) {\r\n\r\n \r\n        let epost : IPostCompanyData = {\r\n        address : e.address,\r\n        companyProfit : e.companyProfit.toString(),\r\n        debt : e.debt.toString(),\r\n        depositDate : e.depositDate?.toString(),\r\n        equitity : e.equitity.toString(),\r\n        name : e.name,\r\n        vat : e.vat }\r\n        console.log(epost)\r\n        if (auth.Auth()) \r\n     \r\n        try {\r\n          const response = await fetch('https://localhost:44391/api/history/history', {\r\n            method: 'POST',\r\n            body: JSON.stringify(epost),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Credentials\": \"true\",\r\n                \"Access-Control-Allow-Headers\": \"Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\",\r\n                \"Access-Control-Allow-Methods\": \"POST\",\r\n                'Authorization': `Bearer ${cookie.GetCookies(\"token\")}`\r\n            },\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error(`Error! status: ${response.status}`);\r\n          }\r\n          const result = (await response.json());\r\n      \r\n          console.log('result is: ', JSON.stringify(result));\r\n      \r\n          return result;\r\n        } catch (error) {\r\n          if (error instanceof Error) {\r\n            console.log('error message: ', error.message);\r\n            return error.message;\r\n          } else {\r\n            console.log('unexpected error: ', error);\r\n            return 'An unexpected error occurred';\r\n          }\r\n        }\r\n      }\r\n    useEffect(() => {\r\n        //for testing purposes please regard changing your localhost port.\r\n        GetCompanyDetailsFirst();\r\n        GetCompanyDetailsSecond();\r\n    }, []);\r\n    //response can only be called per method, this is the reason two API call methodes were made.\r\n    //both calls are in a try catch so the app won't crash, user will be notified if the VAT they've used was valid.\r\n    const GetCompanyDetailsFirst = async () => {\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[0]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n      \r\n      \r\n\r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n            PostToHistory(data.finalCompanyData .pop())\r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState1(true);\r\n        }\r\n\r\n    }\r\n    const GetCompanyDetailsSecond = async () => {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let url = `https://localhost:44391/nbbapi/${vatInput[1]}`;\r\n            let response = await fetch(`${url}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            let data = await response.json();\r\n            const hold = data;\r\n            \r\n            setCompanyInfo(data.finalCompanyData as ICompanyData[]);\r\n            PostToHistory(data.finalCompanyData .pop())\r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setErrorState2(true);\r\n        }\r\n\r\n    }\r\n\r\n//renders that the user will see when they've provide the data, condition statements make sure the user will be notified when wrong inputs have been made.\r\n\r\n\r\n\r\n    if (errorState1 === false && errorState2 === false) {\r\n        return (\r\n            <div  className=\"d-flex justify-content-around\">\r\n            <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n    else if (errorState1 === true && errorState2 === false) {\r\n        return (\r\n            <div >\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Failed to find the first result, please try again with a valid VAT number!\r\n                </div>\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if (errorState1 === false && errorState2 === true) {\r\n        return (\r\n            <div>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Failed to find the second result, please try again with a valid VAT number!\r\n                </div>\r\n                <CompanyCard companyInfo={companyInfo} />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Failed to find any results, please try again using valid VAT numbers!\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ApiCallNBB;"],"mappings":"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"},"metadata":{},"sourceType":"module"}